# Copyright 2022 MobiledgeX, Inc
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
- hosts: platform
  vars_prompt:

    - name: region
      prompt: "Region"
      private: no

    - name: snapshot_url
      prompt: "Artifactory snapshot URL"
      private: no

    - name: backup_old_db
      prompt: "Backup old DB (no)"
      private: no

  tasks:

    - name: Get Artifactory token from vault
      set_fact:
        vault_lookup: "{{ lookup('vault', artifactory_key) }}"
      vars:
        artifactory_key: "secret/ansible/{{ deploy_environ }}/artifactory_tokens"

    - set_fact:
        artifactory_token: "{{ vault_lookup.artifactory_tokens.data.etcd_reader }}"

    - name: Verify Artifactory URL
      uri:
        url: "{{ snapshot_url }}"
        method: HEAD
        headers:
          Authorization: "Bearer {{ artifactory_token }}"
        return_content: yes
      register: url_lookup

    - set_fact:
        snapshot_sha1sum: "{{ url_lookup.x_checksum_sha1 }}"

    - pause:
        prompt: |

          Snapshot size: {{ url_lookup.content_length | int | human_readable }}
          Snapshot SHA1 checksum: {{ snapshot_sha1sum }}

          (Enter to continue)

    - import_role:
        name: azure-aks
        tasks_from: platform-regions-load

    - set_fact:
        plat: "{{ platform_regions | selectattr('region', 'equalto', region) | list | first }}"

    - include_role:
        name: etcd
        tasks_from: restore
      vars:
        k8s_cluster_name: "{{ plat.name }}"
        resource_group: "{{ plat.resource_group }}"
        kube_config: "{{ plat.kube_config }}"
        region: "{{ plat.region }}"
