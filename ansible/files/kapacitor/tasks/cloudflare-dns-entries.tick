dbrp "cloudflare"."autogen"

var name = 'Cloudflare DNS Entries'

var info = 2500
var warn = 3000
var crit = 3250
var infoSig = 2.5
var warnSig = 3
var critSig = 3.5

var period = 60m
var every = 60m

var outputDB = 'chronograf'
var outputRP = 'autogen'
var outputMeasurement = 'alerts'
var triggerType = 'threshold'

// Dataframe
var data = batch
    |query('''SELECT last("value") AS "nrecs" FROM "cloudflare"."autogen"."num_records" ''')
        .period(period)
        .every(every)

// Thresholds
var alert = data
    |eval(lambda: sigma("nrecs"))
        .as('sigma')
        .keep()
    |alert()
        .id(name)
        .message('{{ .Level }}: {{ .ID }}: {{ index .Fields "nrecs" }} records')
        .info(lambda: "nrecs" > info OR "sigma" > infoSig)
        .warn(lambda: "nrecs" > warn OR "sigma" > warnSig)
        .crit(lambda: "nrecs" > crit OR "sigma" > critSig)
        .slack()
        .channel('#alerts')

alert
    |eval(lambda: int("nrecs"))
        .as('nrecs')
        .keep()
    |influxDBOut()
        .create()
        .database(outputDB)
        .retentionPolicy(outputRP)
        .measurement(outputMeasurement)
        .tag('alertName', name)
        .tag('triggerType', triggerType)

alert
    |httpOut('output')
