---
- name: Ensure edge cloud version is set
  hosts:
    - crms
    - mc
  gather_facts: no
  tasks:
    - assert:
        that: edge_cloud_version is defined

- name: Ensure that console version is set
  hosts:
    - console
  gather_facts: no
  tasks:
    - set_fact:
        github_user: "{{ lookup('env', 'GITHUB_USER') }}"
      when: github_user is not defined or not github_user

    - set_fact:
        github_token: "{{ lookup('env', 'GITHUB_TOKEN') }}"
      when: github_token is not defined or not github_token

    - set_fact:
        console_version_not_provided: true
      when: console_version is not defined

    - name: Get list of edge-cloud-ui tags from Github
      uri:
        url: https://api.github.com/repos/mobiledgex/edge-cloud-ui/tags
        user: "{{ github_user }}"
        password: "{{ github_token }}"
        force_basic_auth: yes
        return_content: yes
      register: console_tags
      check_mode: false
      when: console_version_not_provided | default(false)

    - name: Pick newest tag by semver
      set_fact:
        console_version: "{{ console_tags.json | json_query('[*].name') | semver_sort(re_filter='^v[0-9]') | last }}"
      when: console_version_not_provided | default(false)

    - assert:
        that:
          - console_version is defined

    - pause:
        prompt: "Installing the latest console release: {{ console_version }}"
        seconds: 30
      when: console_version_not_provided | default(false)

- hosts: platform
  tasks:

    - name: Load registry docker creds
      import_role:
        name: load-vault-creds
        tasks_from: mex_docker

    - name: Check if edge-cloud Image is Available
      uri:
        url: "https://{{ mex_docker_username }}:{{ mex_docker_password }}@{{ mex_docker_registry }}/v2/mobiledgex/edge-cloud/tags/list"
        return_content: yes
        status_code: 200
        body_format: json
      register: response
      failed_when: edge_cloud_version not in response.json.tags
      check_mode: no

    - name: Notify upgrade start on slack
      slack:
        token: "{{ slack_token }}"
        channel: "{{ slack_channel }}"
        msg: "Mexplat \"{{ deploy_environ }}\" setup being upgraded to version {{ edge_cloud_version }} by {{ ansible_user }}"
      delegate_to: localhost
      when:
        - not ansible_check_mode
      tags: notify

    - import_role:
        name: azure-aks
        tasks_from: platform-regions-load

    - include_role:
        name: mexplat_k8s
      vars:
        k8s_cluster_name: "{{ item.name }}"
        region: "{{ item.region }}"
        resource_group: "{{ item.resource_group }}"
        dme_aliases: "{{ item.global_dme_aliases }}"
      with_items: "{{ platform_regions }}"

- hosts: gitlab
  roles:
    - role: telegraf
      tags: monitoring
    - role: docker
    - role: gitlab

- hosts: postgres
  tasks:
    - import_role:
        name: load-vault-creds
        tasks_from: mc
    - import_role:
        name: postgres
      vars:
        postgres_db_accounts:
          - db: "{{ mc_postgres_db }}"
            username: "{{ mc_postgres_username }}"
            password: "{{ mc_postgres_password }}"

- hosts: crms
  tasks:
    - import_role:
        name: telegraf
      tags: monitoring
    - import_role:
        name: docker
      tags: setup
    - include_role:
        name: crm
      loop: "{{ crm_instances }}"
      loop_control:
        index_var: crm_index
    - include_role:
        name: shepherd
      loop: "{{ crm_instances }}"
      loop_control:
        index_var: crm_index

- hosts: mc
  roles:
    - role: telegraf
      tags: [ 'monitoring', 'setup' ]
    - role: web
      tags: setup
      vars:
        nginx_config_template: "templates/mexplat/mc-nginx-config.j2"
        cert_domains: [ "{{ mc_vm_hostname }}" ]
    - role: docker
      tags: setup
    - mc

- hosts: stun
  roles:
    - role: telegraf
      tags: monitoring
    - role: coturn

- hosts: console
  tasks:
    - import_role:
        name: telegraf
      tags: monitoring
    - import_role:
        name: web
      vars:
        nginx_config_template: "templates/mexplat/console-nginx-config.j2"
        cert_domains: [ "{{ console_vm_hostname }}" ]
      when: skip_console_setup is not defined or not skip_console_setup
      tags: setup
    - import_role:
        name: docker
      tags: setup
    - import_role:
        name: console

- hosts: registry_replicas
  tasks:
    - import_role:
        name: telegraf
      tags: monitoring
    - import_role:
        name: registry_replica

- hosts: platform
  tasks:
    - name: Notify upgrade completion on slack
      slack:
        token: "{{ slack_token }}"
        channel: "{{ slack_channel }}"
        msg: "Mexplat \"{{ deploy_environ }}\" setup successfully upgraded to version {{ edge_cloud_version }} by {{ ansible_user }}"
      when:
        - not ansible_check_mode
      tags: notify
