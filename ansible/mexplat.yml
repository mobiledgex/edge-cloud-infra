---
- name: Ensure edge cloud version is set
  hosts:
    - crms
    - mc
  gather_facts: no
  tasks:
    - assert:
        that: edge_cloud_version is defined

- name: Ensure that console version is set
  hosts:
    - console
  gather_facts: no
  tasks:
    - block:
      - set_fact:
          github_user: "{{ lookup('env', 'GITHUB_USER') }}"
        when: github_user is not defined or not github_user

      - set_fact:
          github_token: "{{ lookup('env', 'GITHUB_TOKEN') }}"
        when: github_token is not defined or not github_token

      - set_fact:
          console_version_not_provided: true
        when: console_version is not defined

      - name: Get latest edge-cloud-ui release from Github
        uri:
          url: https://api.github.com/repos/mobiledgex/edge-cloud-ui/releases/latest
          user: "{{ github_user }}"
          password: "{{ github_token }}"
          force_basic_auth: yes
          return_content: yes
        register: console_tags
        check_mode: false
        delegate_to: localhost
        when: console_version_not_provided | default(false)

      - name: Pick tag for latest release
        set_fact:
          console_version: "{{ console_tags.json.tag_name }}"
        when: console_version_not_provided | default(false)

      - assert:
          that:
            - console_version is defined

      - pause:
          prompt: "Installing the latest console release: {{ console_version }}"
          seconds: 30
        when: console_version_not_provided | default(false)

      tags: console

- name: Check gitlab version
  hosts:
    - gitlab
  gather_facts: no
  tasks:
    - import_role:
        name: gitlab
        tasks_from: version-check

- name: Set up vault auth, policies, and roles
  import_playbook: vault-setup.yml
  tags: vault-setup

- hosts: platform
  tasks:
    - import_role:
        name: vault
        tasks_from: load-token
      delegate_to: localhost

    - name: Load registry docker creds
      import_role:
        name: load-vault-creds
        tasks_from: mex_docker

    - name: Check if edge-cloud Image is Available
      uri:
        url: "https://{{ mex_docker_username }}:{{ mex_docker_password }}@{{ mex_docker_registry }}/v2/mobiledgex/edge-cloud/tags/list"
        return_content: yes
        status_code: 200
        body_format: json
      register: response
      check_mode: no

    - name: Notify upgrade start on slack
      slack:
        token: "{{ slack_token }}"
        channel: "{{ slack_channel }}"
        msg: "Mexplat \"{{ deploy_environ }}\" setup being upgraded to version {{ edge_cloud_version }} by {{ ansible_user }}"
      delegate_to: localhost
      when:
        - not ansible_check_mode
      tags: notify

    - import_role:
        name: azure-aks
        tasks_from: platform-regions-load

    - set_fact:
        dme_details: []

    - include_role:
        name: mexplat_k8s
      vars:
        k8s_cluster_name: "{{ item.name }}"
        region: "{{ item.region }}"
        latitude: "{{ item.latitude }}"
        longitude: "{{ item.longitude }}"
        resource_group: "{{ item.resource_group }}"
        dme_aliases: "{{ item.global_dme_aliases }}"
        kubernetes_version: "{{ item.kubernetes_version }}"
        cluster_influxdb_volume_size: "{{ item.influxdb_volume_size }}"
      with_items: "{{ platform_regions }}"

    - debug: var=dme_details
      tags: [ 'never', 'debug' ]

    - import_role:
        name: ns1
        tasks_from: global-dme

- hosts: gitlab
  tasks:
    - import_role:
        name: vault
        tasks_from: vault-ssh
    - name: Update Gitlab GPG key
      apt_key:
        url: https://packages.gitlab.com/gpg.key
        state: present
      become: yes
    - import_role:
        name: telegraf
      tags: monitoring
    - import_role:
        name: docker
      tags: setup
    - import_role:
        name: gitlab
      tags: setup

- hosts: postgres
  tasks:
    - import_role:
        name: vault
        tasks_from: vault-ssh
    - import_role:
        name: load-vault-creds
        tasks_from: mc
    - import_role:
        name: postgres
      vars:
        postgres_db_accounts:
          - db: "{{ mc_postgres_db }}"
            username: "{{ mc_postgres_username }}"
            password: "{{ mc_postgres_password }}"

- hosts: crms
  tasks:
    - import_role:
        name: vault
        tasks_from: vault-ssh
    - import_role:
        name: vault
        tasks_from: load-token
      delegate_to: localhost
    - import_role:
        name: telegraf
      tags: monitoring
    - import_role:
        name: docker
      tags: setup
    - include_role:
        name: crm
      loop: "{{ crm_instances }}"
      loop_control:
        index_var: crm_index
    - include_role:
        name: shepherd
      loop: "{{ crm_instances }}"
      loop_control:
        index_var: crm_index

- hosts: stun
  tasks:
    - import_role:
        name: vault
        tasks_from: vault-ssh
    - import_role:
        name: telegraf
      tags: monitoring
    - import_role:
        name: coturn

- hosts: alertmanager
  tasks:
    - import_role:
        name: vault
        tasks_from: vault-ssh
    - import_role:
        name: docker
      tags: setup
    - import_role:
        name: alertmanager
      tags: alertmanager

- hosts: console
  tasks:
    - import_role:
        name: vault
        tasks_from: vault-ssh
    - import_role:
        name: vault
        tasks_from: load-token
      delegate_to: localhost
    - import_role:
        name: telegraf
      vars:
        telegraf_additional_config:
          - input/nginx.conf.j2
      tags: [ 'monitoring', 'setup' ]
    - import_role:
        name: web
      vars:
        nginx_config_template: "templates/mexplat/console-nginx-config.j2"
        cert_domains: [ "{{ inventory_hostname }}", "{{ console_vnc_hostname }}" ]
      when: skip_console_setup is not defined or not skip_console_setup
      tags: setup
    - import_role:
        name: docker
      tags: setup
    - import_role:
        name: console
      tags: console
    - import_role:
        name: mc
      tags: mc

- hosts: notifyroot
  tasks:
    - import_role:
        name: vault
        tasks_from: vault-ssh
    - import_role:
        name: vault
        tasks_from: load-token
      delegate_to: localhost
    - import_role:
        name: telegraf
      tags: [ 'monitoring', 'setup' ]
    - import_role:
        name: notifyroot

- hosts: registry_replicas
  tasks:
    - import_role:
        name: vault
        tasks_from: vault-ssh
    - import_role:
        name: telegraf
      tags: monitoring
    - import_role:
        name: registry_replica

- hosts: platform
  tasks:
    - name: Notify upgrade completion on slack
      slack:
        token: "{{ slack_token }}"
        channel: "{{ slack_channel }}"
        msg: "Mexplat \"{{ deploy_environ }}\" setup successfully upgraded to version {{ edge_cloud_version }} by {{ ansible_user }}"
      when:
        - not ansible_check_mode
      tags: notify

- hosts: jaeger
  tasks:
    - import_role:
        name: vault
        tasks_from: vault-ssh

    - import_role:
        name: telegraf
      tags:
        - monitoring
        - setup

    - import_role:
        name: docker
      tags: setup

    - import_role:
        name: jaeger

- hosts: esproxy
  tasks:
    - import_role:
        name: vault
        tasks_from: vault-ssh

    - import_role:
        name: telegraf
      tags:
        - monitoring
        - setup

    - import_role:
        name: esproxy
