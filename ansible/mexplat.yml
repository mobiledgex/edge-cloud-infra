---
- name: Ensure edge cloud version is set
  hosts:
    - crms
    - mc
  gather_facts: no
  tasks:
    - assert:
        that: edge_cloud_version is defined

- name: Ensure that console version is set
  hosts:
    - console
  gather_facts: no
  tasks:
    - set_fact:
        github_user: "{{ lookup('env', 'GITHUB_USER') }}"
      when: github_user is not defined or not github_user

    - set_fact:
        github_token: "{{ lookup('env', 'GITHUB_TOKEN') }}"
      when: github_token is not defined or not github_token

    - name: Pick latest release from Github
      uri:
        url: https://api.github.com/repos/mobiledgex/edge-cloud-ui/releases/latest
        user: "{{ github_user }}"
        password: "{{ github_token }}"
        force_basic_auth: yes
        return_content: yes
      register: console_release
      when: console_version is not defined

    - set_fact:
        console_version: "{{ console_release.json.tag_name }}"
      when: console_version is not defined

    - pause:
        prompt: "Installing the latest console release: {{ console_version }}"
        seconds: 30
      when: console_release is defined

- hosts: platform
  tasks:

    - name: Check if edge-cloud Image is Available
      uri:
        url: "https://{{ mex_docker_username }}:{{ mex_docker_password }}@{{ mex_docker_registry }}/v2/mobiledgex/edge-cloud/tags/list"
        return_content: yes
        status_code: 200
        body_format: json
      register: response
      failed_when: edge_cloud_version not in response.json.tags
      check_mode: no

    - name: Import terraform variables from ansible
      make:
        chdir: "../terraform/mexplat/{{ deploy_environ }}"
        target: ansible.auto.tfvars
      changed_when: false

    - name: Get setup details from terraform
      terraform:
        project_path: "../terraform/mexplat/{{ deploy_environ }}"
        state: present
        force_init: yes
        variables:
          azure_terraform_service_principal_id: "{{ azure_terraform_service_principal_id }}"
          azure_terraform_service_principal_secret: "{{ azure_terraform_service_principal_secret }}"
          azure_subscription_id: "{{ azure_subscription_id }}"
          azure_tenant_id: "{{ azure_tenant_id }}"
      check_mode: yes
      register: terraform

    - set_fact:
        k8s_clusters: "{{ terraform.outputs.k8s_clusters.value }}"

    - name: Notify upgrade start on slack
      slack:
        token: "{{ slack_token }}"
        channel: "{{ slack_channel }}"
        msg: "Mexplat \"{{ deploy_environ }}\" setup being upgraded to version {{ edge_cloud_version }} by {{ ansible_user }}"
      delegate_to: localhost
      when:
        - not ansible_check_mode
      tags: notify

    - include_role:
        name: mexplat_k8s
      vars:
        k8s_cluster_name: "{{ item.name }}"
        kube_config: "{{ item.kube_config }}"
      with_items: "{{ k8s_clusters }}"

- hosts: gitlab
  roles:
    - role: gitlab

- hosts: postgres
  roles:
    - role: postgres
      vars:
        postgres_users:
          - db: "{{ mc_postgres_db }}"
            username: "{{ mc_postgres_username }}"
            password: "{{ mc_postgres_password }}"

- hosts: crms
  tasks:
    - import_role:
        name: docker
    - include_role:
        name: crm
      with_items: "{{ crm_instances }}"

- hosts: mc
  roles:
    - role: web
      vars:
        nginx_config_template: "templates/mexplat/mc-nginx-config.j2"
        cert_domains: [ "{{ mc_vm_hostname }}" ]
    - docker
    - mc

- hosts: stun
  roles:
    - coturn

- hosts: console
  tasks:
    - import_role:
        name: web
      vars:
        nginx_config_template: "templates/mexplat/console-nginx-config.j2"
        cert_domains: [ "{{ console_vm_hostname }}" ]
      when: skip_console_setup is not defined or not skip_console_setup
    - import_role:
        name: docker
    - import_role:
        name: console

- hosts: platform
  tasks:
    - name: Notify upgrade completion on slack
      slack:
        token: "{{ slack_token }}"
        channel: "{{ slack_channel }}"
        msg: "Mexplat \"{{ deploy_environ }}\" setup successfully upgraded to version {{ edge_cloud_version }} by {{ ansible_user }}"
      when:
        - not ansible_check_mode
      tags: notify
