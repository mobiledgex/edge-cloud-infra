- name: reset and stop etcds
  gather_facts: no
  user: ubuntu
  become: yes
  hosts: etcd

  vars_files:
  - mex_vars.yml
  - "{{ setupfile }}"

  tasks:
  - name: stop etcd process
    shell: "pkill -9 etcd||true"
    when: item.hostname == inventory_hostname 
    with_items:
       -  "{{ etcds }}"

  - name: reset etcd data
    file:
      state: absent
      path: "{{ item.etcdlocal.datadir }}"
    when: item.hostname == inventory_hostname 
    with_items:
       -  "{{ etcds }}"

- name: stop controllers
  gather_facts: no
  user: ubuntu
  become: yes
  hosts: controller

  vars_files:
  - mex_vars.yml
  - "{{ setupfile }}"

  tasks:

  - name: stop controller process
    shell: "pkill -9 controller|| true"
    when: item.hostname == inventory_hostname and item.dockerimage == ""
    with_items:
       -  "{{ controllers }}"
    
  - name: stop controller docker container
    shell: "docker kill $(docker ps|grep {{item.name}}|cut -d' ' -f 1)|| true"
    when: item.hostname == inventory_hostname and item.dockerimage != ""
    with_items:
       -  "{{ controllers }}"

- name: stop dmes
  gather_facts: no
  user: ubuntu
  become: yes
  hosts: dme

  vars_files:
  - mex_vars.yml
  - "{{ setupfile }}"

  tasks:

  - name: stop dme-server process
    shell: "pkill -9 dme-server||true"
    when: item.hostname == inventory_hostname and item.dockerimage == ""
    with_items:
       -  "{{ dmes }}"

  - name: stop dme docker container
    shell: "docker kill $(docker ps|grep {{item.name}}|cut -d' ' -f 1)||true"
    when: item.hostname == inventory_hostname and item.dockerimage != ""
    with_items:
       -  "{{ dmes }}"
       
- name: stop crms
  gather_facts: no
  user: ubuntu
  become: yes
  hosts: crm

  vars_files:
  - mex_vars.yml
  - "{{ setupfile }}"

  tasks:
  - name: stop crmserver process
    shell: "pkill -9 crmserver||true"
    when: item.hostname == inventory_hostname and item.dockerimage == "" 
    with_items:
       -  "{{ crms }}"

  - name: stop crm docker container
    shell: "docker kill $(docker ps|grep {{item.name}}|cut -d' ' -f 1)||true"
    when: item.hostname == inventory_hostname and item.dockerimage != ""
    with_items:
       -  "{{ crms }}"

- name: stop locapisims
  gather_facts: no
  user: ubuntu
  become: yes
  hosts: locapisim

  vars_files:
  - mex_vars.yml
  - "{{ setupfile }}"

  tasks:
  - name: stop locsim process
    shell: "pkill -9 loc-api-sim||true"
    when: item.hostname == inventory_hostname and item.dockerimage == ""
    with_items:
       -  "{{ locapisims }}"

  - name: stop locsim docker container
    shell: "docker kill $(docker ps|grep {{item.locapisimlocal.name}}|cut -d' ' -f 1)||true"
    when: item.hostname == inventory_hostname and item.dockerimage != ""
    with_items:
       -  "{{ locapisims }}"

- name: stop toksrvsims
  gather_facts: no
  user: ubuntu
  become: yes
  hosts: toksrvsim

  vars_files:
  - mex_vars.yml
  - "{{ setupfile }}"

  tasks:
  - name: stop toksim process
    shell: "pkill -9 tok-srv-sim||true"
    when: item.hostname == inventory_hostname 
    with_items:
       -  "{{ toksrvsims }}"

  - name: stop toksim docker container
    shell: "docker kill $(docker ps|grep {{item.name}}|cut -d' ' -f 1)||true"
    when: item.hostname == inventory_hostname and item.dockerimage != ""
    with_items:
       -  "{{ toksrvsims }}"


- name: stop vault
  gather_facts: no
  user: ubuntu
  become: yes
  hosts: vault

  vars_files:
  - mex_vars.yml
  - "{{ setupfile }}"

  tasks:
  - name: stop sampleapp docker container
    shell: "docker kill $(docker ps|grep {{item.vault.name}}|cut -d' ' -f 1)||true"
    when: item.hostname == inventory_hostname and item.dockerimage != ""
    with_items:
      -  "{{ vaults }}"

