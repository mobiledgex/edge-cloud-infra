- name: Create alertmanager config directory if doesn't exist
  file:
    path: "{{ alertmanager_config_path }}"
    state: directory
    mode: '0755'

- name: Get global client cert
  uri:
    url: https://{{ vault_vm_hostname }}/v1/pki-global/ca/pem
    validate_certs: no
    return_content: yes
  register: cert

- name: Copy client cert into a file
  copy:
    content: "{{ cert.content}}"
    dest: "{{ alertmanager_config_path }}/mex-ca.crt"
    force: no

- name: Setup alertmanager access
  import_role:
      name: web
      tasks_from: certs
  vars:
    cert_domains: [ "{{ inventory_hostname }}" ]
    post_renewal_hooks:
      - hook_name: alertmgr_restart
        hook_content: "{{ lookup('template', 'alertmgr_restart.hook.j2') }}"
  tags: setup

- name: Clean out alertmanager cert copies, if any
  file:
    path: "{{ alertmanager_config_path }}/{{ item }}"
    state: absent
  loop:
    - fullchain.pem
    - privkey.pem
  become: yes

- name: Write default alertmanager config if one doesn't exist
  copy:
    content: "{{ lookup('file', 'default-config.yml') }}"
    dest: "{{ alertmanager_config_path }}/{{ alertmanager_config_file }}"
    force: no

- name: Copy alertmanager templates file
  copy:
    content: "{{ lookup('file', 'alertmanager.tmpl') }}\n{{ begin_def }}https://{{ console_vm_hostname }}{{ end_def }}"
    dest: "{{ alertmanager_config_path }}/{{ alertmanager_template_file }}"
  vars:
    begin_def: !unsafe '{{ define "console.link" }}'
    end_def: !unsafe '{{ end }}'

- name: Load noreply email details from vault
  import_role:
    name: load-vault-creds
    tasks_from: noreply

- name: Install the docker compose manifest
  template:
    src: docker-compose.yml.j2
    dest: "{{ alertmanager_config_path }}/docker-compose.yml"

- name: Start the alertmanager services
  docker_compose:
    project_name: alertmanager
    project_src: "{{ alertmanager_config_path }}"
  register: compose

- name: Check sidecar service running
  wait_for:
    host: "0.0.0.0"
    port: 9094
    timeout: 30
