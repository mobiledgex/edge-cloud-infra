- name: Set up namespace
  k8s:
    kubeconfig: "{{ kubeconfig_file.path }}"
    name: "{{ namespace }}"
    kind: Namespace

- name: Disable resource validation in namespace
  command: "kubectl --kubeconfig {{ kubeconfig_file.path }} label namespace {{ namespace }} certmanager.k8s.io/disable-validation=true"
  register: result
  changed_when: no
  failed_when:
    - result.rc != 0
    - '"already has a value (true)" not in result.stderr'

- name: "Install cert-manager {{ cert_manager_version }}"
  command: "kubectl --kubeconfig {{ kubeconfig_file.path }} apply -f https://github.com/jetstack/cert-manager/releases/download/{{ cert_manager_version }}/cert-manager.yaml --validate=false"

- set_fact:
    acme_url: "https://acme{{ ( use_letsencrypt_staging is defined and use_letsencrypt_staging ) | ternary('-staging', '') }}-v02.api.letsencrypt.org/directory"

- name: Set up cloudflare secret
  k8s:
    kubeconfig: "{{ kubeconfig_file.path }}"
    definition: "{{ lookup('template', 'cloudflare-apikey-secret.yaml.j2') }}"
    namespace: "{{ namespace }}"
    state: present

- name: Set up the letsencrypt dns01 issuer
  k8s:
    kubeconfig: "{{ kubeconfig_file.path }}"
    definition: "{{ lookup('template', 'letsencrypt-dns01.yaml.j2') }}"
    namespace: default
    state: present

- name: Set up the letsencrypt http01 issuer
  k8s:
    kubeconfig: "{{ kubeconfig_file.path }}"
    definition: "{{ lookup('template', 'letsencrypt-http01.yaml.j2') }}"
    namespace: default
    state: present
