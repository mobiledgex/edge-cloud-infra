- name: Get mex-etcd pod
  command: "kubectl --kubeconfig {{ kubeconfig_file.path }} get pods --selector=etcd_cluster={{ etcd_cluster_to_backup | default(etcd_cluster_name) }} -o jsonpath={.items[*].metadata.name}"
  register: mex_etcd_pod_json
  check_mode: no
  changed_when: false

- set_fact:
    mex_etcd_pod: "{{ mex_etcd_pod_json.stdout.split(' ') | first }}"
  check_mode: no
  changed_when: false

- debug:
    msg: "Etcd pod to back up: {{ mex_etcd_pod }}"

- name: Back up etcd data
  block:

  - name: Clean out any old backups
    command: "kubectl --kubeconfig {{ kubeconfig_file.path }} exec {{ mex_etcd_pod }} -- rm -f {{ etcd_backup_file }}"
    changed_when: false

  - name: Backup etcd database
    command: "kubectl --kubeconfig {{ kubeconfig_file.path }} exec {{ mex_etcd_pod }} -- env ETCDCTL_API=3 etcdctl snapshot save {{ etcd_backup_file }}"
    changed_when: false

  # Work around this bug: https://github.com/kubernetes/kubernetes/issues/78211
  - set_fact:
      tempfile_path: /private/tmp
    when: ansible_distribution == "MacOSX"

  - set_fact:
      tempfile_path: /tmp
    when: tempfile_path is not defined

  - name: Create temporary file for etcd backup download
    tempfile:
      path: "{{ tempfile_path }}"
      state: file
      suffix: .db
    register: etcd_backup_local_file
    changed_when: false
    check_mode: no

  - name: Download etcd database
    command: "kubectl --kubeconfig {{ kubeconfig_file.path }} cp {{ mex_etcd_pod }}:{{ etcd_backup_file }} {{ etcd_backup_local_file.path }}"
    changed_when: false

  - stat:
      path: "{{ etcd_backup_local_file.path }}"
    register: etcd_backup_local_file_st

  - name: Verify etcd backup size
    assert:
      that: etcd_backup_local_file_st.stat.size > 0
    when: not ansible_check_mode

  - name: Set backup path
    set_fact:
      etcd_backup_path_int: "{{ etcd_backup_path }}"
    when: etcd_backup_path is defined

  - name: Compute backup path
    set_fact:
      etcd_backup_path_int: "{{ ansible_date_time.year }}-{{ ansible_date_time.month }}/etcd-backup-{{ ansible_date_time.iso8601 }}.db"
    when: etcd_backup_path is not defined

  - name: "Archive etcd backup in Artifactory: {{ etcd_backup_path_int }}"
    uri:
      url: "{{ artifactory_address }}/{{ artifactory_etcd_backup_repo }}/{{ deploy_environ }}/{{ k8s_cluster_name }}/{{ etcd_backup_path_int }}"
      method: PUT
      headers:
        X-JFrog-Art-Api: "{{ artifactory_publish_api_key }}"
        X-Checksum-Sha1: "{{ etcd_backup_local_file_st.stat.checksum }}"
      src: "{{ etcd_backup_local_file.path }}"
      status_code: 201

  when: mex_etcd_pod|length > 0
