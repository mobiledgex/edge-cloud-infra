- name: Get mex-etcd pod
  command: "kubectl --kubeconfig {{ kubeconfig_file.path }} get pods --selector=etcd_cluster=mex-etcd-cluster -o jsonpath={.items[*].metadata.name}"
  register: mex_etcd_pod_json
  check_mode: no
  changed_when: false

- set_fact:
    mex_etcd_pod: "{{ mex_etcd_pod_json.stdout.split(' ') | first }}"
  check_mode: no
  changed_when: false

- name: Backup etcd
  include: etcd-backup.yml
  when: mex_etcd_pod|length > 0
  tags: etcd-backup

- name: Deploy the Mex Controller
  k8s:
    kubeconfig: "{{ kubeconfig_file.path }}"
    namespace: default
    state: present
    definition: "{{ lookup('template', 'mexplat/mex-controller-deploy.yml.j2') }}"

- name: Deploy the Mex Controller LB
  k8s:
    kubeconfig: "{{ kubeconfig_file.path }}"
    namespace: default
    state: present
    definition: "{{ lookup('template', 'mexplat/mex-controller-lb.yml') }}"

- name: Get Controller Public IP
  command: "kubectl --kubeconfig {{ kubeconfig_file.path }} get svc -o jsonpath='{.status.loadBalancer.ingress[0].ip}' controller"
  register: controller_ip_command
  retries: 60
  delay: 5
  until: controller_ip_command.stdout != ""
  changed_when: false
  check_mode: no

- set_fact:
    controller_ip: "{{ controller_ip_command.stdout }}"

- name: Update Controller DNS
  cloudflare_dns:
    zone: "{{ cloudflare_zone }}"
    record: "{{ k8s_cluster_name }}.ctrl"
    value: "{{ controller_ip }}"
    type: A
    state: present
    solo: true
    account_email: "{{ cloudflare_account_email }}"
    account_api_token: "{{ cloudflare_account_api_token }}"
