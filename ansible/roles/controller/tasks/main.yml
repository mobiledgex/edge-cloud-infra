- name: Backup etcd
  include: etcd-backup.yml
  tags: etcd-backup

- set_fact:
    controller_hostname: "{{ k8s_cluster_name }}.ctrl.{{ cloudflare_zone }}"

- name: Fetch controller vault role
  set_fact:
    controller_role: "{{ lookup('approle', controller_role_name) }}"
  vars:
    controller_role_name: "{{ region | lower }}.controller.v1"

- name: Fetch CRM vault role
  set_fact:
    crm_role: "{{ lookup('approle', 'crm.v1', revoke_old='no') }}"

- name: Deploy the Mex Controller
  k8s:
    kubeconfig: "{{ kubeconfig_file.path }}"
    namespace: default
    state: present
    definition: "{{ lookup('template', 'deploy.yml.j2') }}"

- name: Deploy the Mex Controller LB
  k8s:
    kubeconfig: "{{ kubeconfig_file.path }}"
    namespace: default
    state: present
    definition: "{{ lookup('template', 'lb.yml.j2') }}"

- name: Get Controller Public IP
  command: "kubectl --kubeconfig {{ kubeconfig_file.path }} get svc -o jsonpath='{.status.loadBalancer.ingress[0].ip}' controller"
  register: controller_ip_command
  retries: 60
  delay: 5
  until: controller_ip_command.stdout != ""
  changed_when: false
  check_mode: no

- set_fact:
    controller_ip: "{{ controller_ip_command.stdout }}"

- name: Load cloudflare creds
  import_role:
    name: load-vault-creds
    tasks_from: cloudflare

- name: Update Controller DNS
  cloudflare_dns:
    zone: "{{ cloudflare_zone }}"
    record: "{{ controller_hostname }}"
    value: "{{ controller_ip }}"
    type: A
    state: present
    solo: true
    account_email: "{{ cloudflare_account_email }}"
    account_api_token: "{{ cloudflare_account_api_token }}"
