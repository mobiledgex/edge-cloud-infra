- set_fact:
    dme_dns: "{{ region | lower }}.dme"
  when: ( deploy_environ == 'main' ) or ( deploy_environ == 'prod' )

- set_fact:
    dme_dns: "{{ region | lower }}-{{ deploy_environ }}.dme"
  when:
    - deploy_environ != 'main'
    - deploy_environ != 'prod'

- set_fact:
    cert_name: "{{ dme_dns | replace('.', '-') }}"
    cert_secret_name: "{{ dme_dns | replace('.', '-') }}-global-tls"
    fqdn_list: [ "{{ dme_dns }}.{{ cloudflare_zone }}" ]

- name: Set global DME aliases
  set_fact:
    fqdn_list: "{{ dme_aliases }}"
  when: dme_aliases|length > 0

- set_fact:
    cert_id: "{{ fqdn_list | join(',') }}"

- name: "Get DME cert from vault for domain(s): {{ fqdn_list }}"
  set_fact:
    vault_lookup: "{{ lookup('vault', cert_path) }}"
  vars:
    cert_path: "certs/cert/{{ cert_id }}:dmecert"

- name: "Generate DME tls secret: {{ cert_secret_name }}"
  k8s:
    kubeconfig: "{{ kubeconfig_file.path }}"
    namespace: default
    definition: "{{ lookup('template', 'mexplat/tls-secret.yaml.j2') }}"
    state: present
  vars:
    cert: "{{ vault_lookup.dmecert.cert }}"
    key: "{{ vault_lookup.dmecert.key }}"

- name: Deploy the Mex DME
  k8s:
    kubeconfig: "{{ kubeconfig_file.path }}"
    namespace: default
    state: present
    definition: "{{ lookup('template', 'mexplat/mex-dme-deploy.yml.j2') }}"

- name: Deploy the Mex DME LB
  k8s:
    kubeconfig: "{{ kubeconfig_file.path }}"
    namespace: default
    state: present
    definition: "{{ lookup('template', 'mexplat/mex-dme-lb.yml') }}"

- name: Get DME Public IP
  command: "kubectl --kubeconfig {{ kubeconfig_file.path }} get svc -o jsonpath='{.status.loadBalancer.ingress[0].ip}' dme"
  register: dme_ip_command
  retries: 60
  delay: 5
  until: dme_ip_command.stdout != ""
  changed_when: false
  check_mode: no

- set_fact:
    dme_ip: "{{ dme_ip_command.stdout }}"

- name: "Update DME DNS: {{ dme_dns }}"
  cloudflare_dns:
    zone: "{{ cloudflare_zone }}"
    record: "{{ dme_dns }}"
    value: "{{ dme_ip }}"
    type: A
    state: present
    solo: true
    account_email: "{{ cloudflare_account_email }}"
    account_api_token: "{{ cloudflare_account_api_token }}"
