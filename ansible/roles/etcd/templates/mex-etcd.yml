# Copyright 2022 MobiledgeX, Inc
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "{{ etcd_cluster_name }}"
  labels:
    component: "{{ etcd_cluster_name }}"
spec:
  selector:
    matchLabels:
      component: "{{ etcd_cluster_name }}"
      etcd_cluster: "{{ etcd_cluster_name }}"
  serviceName: "{{ etcd_cluster_name }}"
  # Changing replicas value will require a manual etcdctl member remove/add
  # command (remove before decreasing and add after increasing)
  replicas: 3
  template:
    metadata:
      name: "{{ etcd_cluster_name }}"
      labels:
        component: "{{ etcd_cluster_name }}"
        etcd_cluster: "{{ etcd_cluster_name }}"
    spec:
      containers:
      - name: "{{ etcd_cluster_name }}"
        image: "quay.io/coreos/etcd:{{ etcd_version }}"
        resources:
          requests:
            cpu: "75m"
            memory: "750Mi"
          limits:
            cpu: "150m"
            memory: "1500Mi"
        ports:
        - containerPort: 2379
          name: client
        - containerPort: 2380
          name: peer
        env:
        - name: CLUSTER_SIZE
          value: "{{ etcd_replica_num }}"
        - name: SET_NAME
          value: "{{ etcd_cluster_name }}"
        volumeMounts:
        - name: data
          mountPath: /var/etcd/data
        command:
          - "/bin/sh"
          - "-ecx"
          - |
            IP=$(hostname -i)

            PEERS=""
            for i in $(seq 0 $((${CLUSTER_SIZE} - 1))); do
                PEERS="${PEERS}${PEERS:+,}${SET_NAME}-${i}=http://${SET_NAME}-${i}.${SET_NAME}:2380"
            done

            if [ -f /var/etcd/data/snap.db ]; then
              echo "Restoring from snapshot: /var/etcd/data/snap.db"
              [ -d /var/etcd/data/default.etcd ] \
                && mv /var/etcd/data/default.etcd /var/etcd/data/default.etcd.$( TZ=UTC date +'%Y-%m-%d-%H%M%S' )
              ETCDCTL_API=3 etcdctl snapshot restore /var/etcd/data/snap.db \
                --name ${HOSTNAME} \
                --initial-cluster ${PEERS} \
                --initial-cluster-token etcd-cluster-1 \
                --initial-advertise-peer-urls http://${HOSTNAME}.${SET_NAME}:2380 \
                --data-dir /var/etcd/data/default.etcd
              rm -f /var/etcd/data/snap.db
            fi

            exec etcd --name ${HOSTNAME} \
              --auto-compaction-retention {{ etcd_auto_compaction_retention }} \
              --quota-backend-bytes {{ etcd_quota_backend | human_to_bytes }} \
              --listen-peer-urls http://${IP}:2380 \
              --listen-client-urls http://${IP}:2379,http://127.0.0.1:2379 \
              --advertise-client-urls http://${HOSTNAME}.${SET_NAME}:2379 \
              --initial-advertise-peer-urls http://${HOSTNAME}.${SET_NAME}:2380 \
              --initial-cluster-token etcd-cluster-1 \
              --initial-cluster ${PEERS} \
              --initial-cluster-state new \
              --data-dir /var/etcd/data/default.etcd

  volumeClaimTemplates:
  - metadata:
      name: data
      annotations:
        volume.alpha.kubernetes.io/storage-class: standard
    spec:
      accessModes:
        - "ReadWriteOnce"
      storageClassName: {{ etcd_volume_storage_class }}
      resources:
        requests:
          storage: 1Gi
