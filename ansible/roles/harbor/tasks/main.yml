---
- import_role:
    name: web
    tasks_from: certs
  vars:
    cert_domains: [ "{{ inventory_hostname }}" ]
    pre_renewal_hooks:
      - hook_name: harbor_reload_hook
        hook_content: |
          #!/bin/bash
          cd /home/ansible/harbor
          docker-compose down -v
    post_renewal_hooks:
      - hook_name: harbor_reload_hook
        hook_content: |
          #!/bin/bash
          cd /home/ansible/harbor
          ./prepare --with-trivy --with-chartmuseum
          docker-compose up -d
  tags: setup

- name: Configure the docker daemon
  copy:
    src: docker-daemon.json
    dest: /etc/docker/daemon.json
  become: yes
  notify: Restart docker daemon

- name: Check if harbor is already installed
  stat:
    path: "{{ harbor_install_dir }}/harbor.yml"
  register: harbor_config_file

- block:

  - pause:

  - name: "Download harbor installer v{{ harbor_release }}"
    get_url:
      url: "https://github.com/goharbor/harbor/releases/download/v{{ harbor_release }}/harbor-offline-installer-v{{ harbor_release }}.tgz"
      dest: "{{ ansible_env.HOME }}/harbor-offline-installer-v{{ harbor_release }}.tgz"
      checksum: "{{ harbor_installer_checksum }}"
    register: harbor_download
    tags: setup

  - name: Create the installer directory
    file:
      path: "{{ harbor_install_dir | dirname }}"
      state: directory
    tags: setup

  - name: Extract harbor
    unarchive:
      src: "{{ harbor_download.dest }}"
      dest: "{{ harbor_install_dir | dirname }}"
      remote_src: yes
    tags: setup

  - name: Load harbor creds from vault
    import_role:
      name: load-vault-creds
      tasks_from: harbor

  - name: Load GCP storage bucket credentials from vault
    set_fact:
      vault_lookup: "{{ lookup('vault', gcp_service_account_vault_path) }}"
    register: result

  - name: Set up GCP service account credentials
    copy:
      dest: "{{ gcp_service_account_path }}"
      content: "{{ vault_lookup.harbor_storage.data }}"
      owner: "10000"
      group: root
      mode: "0400"
    become: yes

  - name: Set up config file
    template:
      src: harbor.yml.j2
      dest: "{{ harbor_install_dir }}/harbor.yml"
    notify: Initial password notice

  - name: Run the installer
    command:
      cmd: ./install.sh --with-trivy --with-chartmuseum
      chdir: "{{ harbor_install_dir }}"
      creates: /data/registry
    become: yes

  when: not harbor_config_file.stat.exists
