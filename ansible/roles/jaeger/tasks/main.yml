---
- name: Deploy all-in-one jaeger
  docker_container:
    name: jaeger
    image: "{{ jaeger_image }}"
    restart_policy: unless-stopped
    ports:
      - 127.0.0.1:24268:14268
      - 127.0.0.1:26686:16686
  when:
    - es_instance is not defined

- name: Deploy jaeger components
  block:
    - name: Compute vault path for creds
      set_fact:
        vault_es_path: "secret/ansible/internal/accounts/elasticsearch/{{ es_instance }}:jaeger"

    - name: Look up elasticsearch credentials in vault
      set_fact:
        vault_lookup: "{{ lookup('vault', vault_es_path) }}"

    - set_fact:
        jaeger_es_url: "{{ vault_lookup.jaeger.data.url }}"
        jaeger_es_user: "{{ vault_lookup.jaeger.data.user }}"
        jaeger_es_pass: "{{ vault_lookup.jaeger.data.pass }}"

    - name: Deploy jaeger collector
      docker_container:
        name: jaeger-collector
        image: "jaegertracing/jaeger-collector:{{ jaeger_version }}"
        restart_policy: unless-stopped
        ports:
          - 127.0.0.1:24268:14268
        env:
          SPAN_STORAGE_TYPE: elasticsearch
          ES_SERVER_URLS: "{{ jaeger_es_url }}"
          ES_INDEX_PREFIX: "{{ es_index_prefix | default('main') }}"
          ES_USERNAME: "{{ jaeger_es_user }}"
          ES_PASSWORD: "{{ jaeger_es_pass }}"

    - name: Deploy jaeger query
      docker_container:
        name: jaeger-query
        image: "jaegertracing/jaeger-query:{{ jaeger_version }}"
        restart_policy: unless-stopped
        ports:
          - 127.0.0.1:26686:16686
        env:
          SPAN_STORAGE_TYPE: elasticsearch
          ES_SERVER_URLS: "{{ jaeger_es_url }}"
          ES_INDEX_PREFIX: "{{ es_index_prefix | default('main') }}"
          ES_USERNAME: "{{ jaeger_es_user }}"
          ES_PASSWORD: "{{ jaeger_es_pass }}"

    - name: Install dependencies
      apt:
        name:
          - moreutils
        state: present
        update_cache: yes
      become: yes

    - name: Install index cleaner cronjob
      cron:
        name: Elasticsearch index cleanup
        minute: 0
        hour: 8
        user: root
        job: 'docker run --rm
            -e "ES_USERNAME={{ jaeger_es_user }}"
            -e "ES_PASSWORD={{ jaeger_es_pass }}"
            -e ES_TLS=true
            {{ jaeger_index_cleaner_image }}
            {{ jaeger_index_cleanup_days }}
            "{{ jaeger_es_url }}"
            | ts >>"{{ jaeger_index_cleanup_log }}"'
      become: yes

  when:
    - es_instance is defined
