---
- import_role:
    name: docker
  tags: setup

- import_role:
    name: web
    tasks_from: certs
  vars:
    cert_domains: [ "{{ inventory_hostname }}" ]
    # XXX: Set up renewal hooks

- name: Install dependencies
  apt:
    name: "{{ item }}"
  loop:
    - openjdk-8-jdk

- name: Set up secrets directory
  file:
    path: "{{ kafka_secrets_base }}"
    state: directory
    owner: "1000"
    group: "1000"
    mode: 0700
  become: yes

- block:

  - name: Install keystore generator
    template:
      src: keystore-gen.sh.j2
      dest: "{{ keystore_gen_path }}"
      owner: root
      group: root
      mode: 0744

  - name: Generate keystore
    command: "{{ keystore_gen_path }}"
    args:
      creates: "{{ keystore_file }}"

  vars:
    - keystore_file: "{{ kafka_secrets_base }}/{{ keystore_filename }}"
    - creds_file: "{{ kafka_secrets_base }}/{{ creds_filename }}"
  become: yes

- name: Install kafka JAAS config
  copy:
    content: |
      KafkaServer {
        org.apache.kafka.common.security.plain.PlainLoginModule required
        username="admin"
        password="admin-secret"
        user_admin="admin-secret";
      };
      Client {
        org.apache.zookeeper.server.auth.DigestLoginModule required
        username="kafka"
        password="kafka-secret";
      };
    dest: "{{ kafka_secrets_base }}/kafka_server_jaas.conf"
    owner: "1000"
    group: "1000"
    mode: 0444
  become: yes

- name: Install zookeeper JAAS config
  copy:
    content: |
      Server {
        org.apache.zookeeper.server.auth.DigestLoginModule required
        user_super="admin-secret"
        user_kafka="kafka-secret";
      };
    dest: "{{ kafka_secrets_base }}/zookeeper_jaas.conf"
    owner: "1000"
    group: "1000"
    mode: 0444
  become: yes

- name: Install docker-compose config
  template:
    src: docker-compose.yml.j2
    dest: docker-compose.yml
  notify: Restart Kafka

- name: Start kafka
  docker_compose:
    project_src: .
    build: no
