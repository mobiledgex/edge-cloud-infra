#!/bin/bash
PATH='/usr/bin:/bin'; export PATH

DOMAIN="{{ inventory_hostname }}"
KEYSTORE="{{ keystore_file }}"
CREDSFILE="{{ creds_file }}"

PASS="$( openssl rand -base64 16 )"

# Abort on errors
set -e

SCRIPTTMP=$( mktemp -d )
trap 'rm -rf "$SCRIPTTMP"' EXIT

cd "$SCRIPTTMP"

# Prepare the keystore (create keystore with dummy key and delete it)
keytool -genkey -keyalg RSA -alias foo -keystore keystore \
  -storepass "$PASS" -keypass "$PASS" \
  -dname "CN=foo, OU=Eng, O=Acme, L=SF, ST=CA, C=US"
keytool -delete -alias foo -keystore keystore -storepass "$PASS"

# Concatenate letsencrypt PEM file and convert into PKCS12 format
cat /etc/letsencrypt/live/${DOMAIN}/*.pem >fullchain.pem
openssl pkcs12 -export -out fullchain.pkcs12 -in fullchain.pem \
  -password "pass:$PASS"

# Import into keystore
keytool -importkeystore -srckeystore fullchain.pkcs12 -srcstorepass "$PASS" \
    -destkeystore keystore -deststorepass "$PASS" -deststoretype JKS

# Import and trust Let's Encrypt CA certs
for CERT in \
    https://letsencrypt.org/certs/isrgrootx1.der \
    https://letsencrypt.org/certs/isrg-root-x2-cross-signed.der \
    https://letsencrypt.org/certs/lets-encrypt-r3.der \
    https://letsencrypt.org/certs/lets-encrypt-e1.der; do

  CERTFILE=$( basename "$CERT" )
  CERTNAME=$( basename "$CERTFILE" .der )

  curl -sfO "$CERT"
  keytool -import -trustcacerts -noprompt -keystore keystore -storepass "$PASS" \
    -alias "$CERTNAME" -file "$CERTFILE"

done

mv keystore "$KEYSTORE"
echo "$PASS" >"$CREDSFILE"
