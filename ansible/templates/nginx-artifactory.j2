server {
	index index.html index.htm index.nginx-debian.html;
	server_name {{ inventory_hostname }};

	if ($http_x_forwarded_proto = '') {
	  set $http_x_forwarded_proto  $scheme;
	}

	rewrite ^/$ /ui/ redirect;
	rewrite ^/ui$ /ui/ redirect;

	proxy_buffer_size		   128k;
	proxy_buffers			   4 256k;
	proxy_busy_buffers_size    256k;

	chunked_transfer_encoding on;
	client_max_body_size 0;

	add_header 'Cache-Control' 'no-cache, no-store, must-revalidate' always;
	add_header 'X-Content-Type-Options' 'nosniff' always;
	add_header 'Strict-Transport-Security' 'max-age=31536000; includeSubDomains; preload' always;
	add_header 'Content-Security-Policy' "object-src 'none'" always;
	add_header 'Expect-CT' 'max-age=86400, enforce' always;
	add_header 'X-XSS-Protection' '1; mode=block' always;
	add_header 'Referrer-Policy' 'strict-origin' always;
	add_header 'Feature-Policy' "microphone 'none'; camera 'none'" always;
	add_header 'X-Permitted-Cross-Domain-Policies' 'none' always;

	location / {
		proxy_read_timeout  2400s;
		proxy_max_temp_file_size 20480m;
		proxy_pass_header   Server;
		proxy_cookie_path   ~*^/.* /;
		proxy_set_header   X-JFrog-Override-Base-Url $http_x_forwarded_proto://$host:$server_port;
		proxy_pass         http://127.0.0.1:9092;
		proxy_set_header    X-Forwarded-Port  $server_port;
		proxy_set_header    X-Forwarded-Proto $http_x_forwarded_proto;
		proxy_set_header    Host              $http_host;
		proxy_set_header    X-Forwarded-For   $proxy_add_x_forwarded_for;

		proxy_hide_header   X-Powered-By;

		limit_except GET PUT HEAD POST DELETE OPTIONS { deny all; }

		location ~ ^/artifactory/ {
			proxy_pass	http://127.0.0.1:9091;
		}
	}
	listen [::]:443 ssl ipv6only=on;
	listen 443 ssl;
	ssl_certificate {{ letsencrypt_root }}/{{ inventory_hostname }}/fullchain.pem;
	ssl_certificate_key {{ letsencrypt_root }}/{{ inventory_hostname }}/privkey.pem;

	ssl_session_cache shared:le_nginx_SSL:1m;
	ssl_protocols TLSv1.2;
	ssl_prefer_server_ciphers on;
	ssl_ciphers '{{ nginx_ssl_ciphers }}';
}

server {
	if ($host = {{ inventory_hostname }}) {
		return 301 https://$host$request_uri;
	}

	listen 80;
	listen [::]:80;

	server_name {{ inventory_hostname }};
	return 404;
}
