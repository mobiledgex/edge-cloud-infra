- hosts: vault
  tasks:

    - name: Ensure that GCP creds are present in the controller
      block:

      - set_fact:
          gcp_creds_file: "{{ lookup('env', 'GOOGLE_CLOUD_KEYFILE_JSON') }}"

      - stat:
          path: "{{ gcp_creds_file }}"
        register: st

      - assert:
          that:
            - gcp_creds_file != ""
            - st.stat.exists
          fail_msg: "Valid GCP credentials not found in variable: GOOGLE_CLOUD_KEYFILE_JSON"

      delegate_to: localhost
      tags:
        - loadbalancer

    - import_role:
        name: ntp
      tags: setup

    - import_role:
        name: docker
      tags: setup

    - name: Install dependencies
      apt:
        name:
          - python-minimal
          - python-requests
      become: yes

    - name: Install vault status monitor plugin
      copy:
        src: vault/vault-status-monitor.py
        dest: "{{ vault_status_monitor_plugin }}"
        owner: root
        group: root
        mode: 0555
      become: yes

    - import_role:
        name: telegraf
      vars:
        telegraf_additional_config:
          - input/vault-statsd.conf.j2
          - input/vault-status.conf.j2
      tags: [ 'monitoring', 'setup' ]

    - import_role:
        name: web
        tasks_from: certs
      vars:
        cert_domains: [ "{{ inventory_hostname }}" ]
        post_renewal_hooks:
          - hook_name: vault_reload_hook
            hook_content: |
              #!/bin/bash
              systemctl reload vault
      tags: setup

    - name: Install google-auth
      pip:
        name: google-auth
      become: yes
      tags: setup

    - name: Set up vault firewall rules
      import_role:
        name: gcp_firewall
        tasks_from: vault
      tags: setup

    - name: Set up vault
      import_role:
        name: vault
      vars:
        storage_bucket_name: "mex-vault-{{ deploy_environ }}"
        project: "{{ gcp_project }}"
        storage_service_account_key: "/etc/gcloud/{{ storage_bucket_name }}.json"

    - name: Set up filebeat, if vault_audit_elasticsearch is enabled
      block:

      - block:
        - name: Get filebeat elasticsearch credentials
          set_fact:
            vault_lookup: "{{ lookup('vault', creds_path) }}"
          vars:
            creds_path: "{{ vault_filebeat_creds_path }}:elastic"
        rescue:
          - pause:
              prompt: "Please add the filebeat credentials to path: {{ vault_filebeat_creds_path }}"
          - name: Get filebeat elasticsearch credentials
            set_fact:
              vault_lookup: "{{ lookup('vault', creds_path) }}"
            vars:
              creds_path: "{{ vault_filebeat_creds_path }}:elastic"

      - set_fact:
          vault_elastic_cloud_id: "{{ vault_lookup.elastic.data.cloud_id }}"
          vault_elastic_cloud_user: "{{ vault_lookup.elastic.data.cloud_user }}"
          vault_elastic_cloud_pass: "{{ vault_lookup.elastic.data.cloud_pass }}"

      - name: Set up filebeat
        import_role:
          name: filebeat
        vars:
          elastic_cloud_id: "{{ vault_elastic_cloud_id }}"
          elastic_cloud_auth: "{{ vault_elastic_cloud_user }}:{{ vault_elastic_cloud_pass }}"
          fields_template: templates/vault/filebeat/fields.yml
          config_template: templates/vault/filebeat/filebeat.yml.j2

      when:
        - vault_audit_elasticsearch is defined
        - vault_audit_elasticsearch|bool
