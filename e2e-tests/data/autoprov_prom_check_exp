ran: curl -s http://127.0.0.1:9092/api/v1/rules | jq . | grep -v valuation
{
  "status": "success",
  "data": {
    "groups": [
      {
        "name": "autoprov-feature",
        "file": "/tmp/rulefile_autoprovappd.yml",
        "rules": [
          {
            "state": "inactive",
            "name": "AutoProvUndeploy",
            "query": "envoy_cluster_upstream_cx_active{app=\"autoprovappd\",apporg=\"AcmeAppCo\",appver=\"1.0\"} <= 1",
            "duration": 3,
            "labels": {},
            "annotations": {},
            "alerts": [],
            "health": "ok",
            "type": "alerting"
          }
        ],
        "interval": 1,
      },
      {
        "name": "StaticRules",
        "file": "/tmp/rulefile_healthcheck.yml",
        "rules": [
          {
            "state": "inactive",
            "name": "AppInstDown",
            "query": "up == 0",
            "duration": 15,
            "labels": {
              "scope": "Application",
              "status": "1"
            },
            "annotations": {
              "description": "Root Load Balancer is not responding",
              "title": "AppInstDown"
            },
            "alerts": [],
            "health": "ok",
            "type": "alerting"
          },
          {
            "state": "inactive",
            "name": "AppInstDown",
            "query": "envoy_cluster_health_check_healthy == 0",
            "duration": 0,
            "labels": {
              "scope": "Application",
              "status": "2"
            },
            "annotations": {
              "description": "Application server port is not responding",
              "title": "AppInstDown"
            },
            "alerts": [],
            "health": "ok",
            "type": "alerting"
          }
        ],
        "interval": 1,
      }
    ]
  }
}

ran: curl -s http://127.0.0.1:9092/api/v1/targets | jq '.data.activeTargets[] | select(.labels.app == "autoprovappd" and .labels.apporg == "AcmeAppCo" and .labels.appver == "1.0" and .labels.cloudlet == "tmus-cloud-1") | del(.lastScrape) | del(.lastScrapeDuration) | del(.health)'
{
  "discoveredLabels": {
    "__address__": "host.docker.internal:9091",
    "__meta_filepath": "/tmp/prom_targets.json",
    "__metrics_path__": "/metrics/autoprovappd-autocluster-autoprov-AcmeAppCo-1.0",
    "__scheme__": "http",
    "app": "autoprovappd",
    "apporg": "AcmeAppCo",
    "appver": "1.0",
    "cloudlet": "tmus-cloud-1",
    "cloudletorg": "tmus",
    "cluster": "autocluster-autoprov",
    "clusterorg": "MobiledgeX",
    "job": "MobiledgeX Monitoring"
  },
  "labels": {
    "app": "autoprovappd",
    "apporg": "AcmeAppCo",
    "appver": "1.0",
    "cloudlet": "tmus-cloud-1",
    "cloudletorg": "tmus",
    "cluster": "autocluster-autoprov",
    "clusterorg": "MobiledgeX",
    "instance": "host.docker.internal:9091",
    "job": "MobiledgeX Monitoring"
  },
  "scrapePool": "MobiledgeX Monitoring",
  "scrapeUrl": "http://host.docker.internal:9091/metrics/autoprovappd-autocluster-autoprov-AcmeAppCo-1.0",
  "globalUrl": "http://host.docker.internal:9091/metrics/autoprovappd-autocluster-autoprov-AcmeAppCo-1.0",
  "lastError": ""
}

