#!/bin/bash
PATH="/usr/bin:/bin:/usr/local/bin:/usr/sbin:/sbin"; export PATH

USAGE="usage: $( basename $0 ) <start|cleanup|reset>"
DIND_REL=v0.3.0
DIND_CLUST=dind-cluster-v1.14.sh
DIND_CLUST_SHA256SUM=867050c3d4a752f24f2db64de2634bfe4a2b8ee3ffc6dd04b14cdcb2be21c6dd
NGINX_DOCKER_IMG=docker.mobiledgex.net/mobiledgex/mobiledgex_public/nginx-with-curl:latest
EDGEBOX_VARS=edgebox_vars.yml
EDGEBOX_VARS_BACKUP="${EDGEBOX_VARS}.reset"

die() {
	echo "ERROR: $*" >&2
	exit 2
}

setup() {
	echo "Checking requirements..."

	# Ensure LDAP_ID is set
	[[ -z "$LDAP_ID" ]] && die "LDAP_ID environment variable not set"

	# Disable Github logins for EdgeBox
	unset GITHUB_ID

	export GOPATH=$( cd $( dirname $0 ); pwd )
	export PATH="$GOPATH/bin:$PATH"
	export EBANSIBLE=$GOPATH/ansible

	# Ensure dind-cluster-v1.14.sh is installed
	DIND_BIN="$GOPATH/bin/$DIND_CLUST"
	if [[ ! -x "$DIND_BIN" ]]; then
		echo "Downloading $DIND_CLUST"
		curl -sL "https://github.com/kubernetes-sigs/kubeadm-dind-cluster/releases/download/${DIND_REL}/${DIND_CLUST}" \
			>"$DIND_BIN"
		chmod +x "$DIND_BIN"
	fi

	SHA=$( openssl sha256 "$DIND_BIN" 2>/dev/null | awk '{print $NF}' )
	[[ "$SHA" != "$DIND_CLUST_SHA256SUM" ]] \
		&& die "Checksum mismatch: $DIND_BIN"

	# Ensure that Python 3 is present
	for _PY in /usr/local/bin/python3 /usr/bin/python3 /usr/local/bin/python /usr/bin/python; do
		[[ ! -x "$_PY" ]] && continue
		${_PY} -V 2>&1 | grep '^Python 3\.' >/dev/null 2>&1
		[[ $? -ne 0 ]] && continue

		PYTHON="$_PY"
		break
	done
	[[ -z "$PYTHON" ]] && die "Python 3 not found"

	# Ensure that the Python 3 venv is present
	VENV_DIR="$GOPATH/venv"
	if [[ ! -d "$VENV_DIR" ]]; then
		echo "Setting up Python 3 virtualenv"
		${PYTHON} -m venv "$VENV_DIR"
		[[ $? -ne 0 ]] && die "Failed to set up Python 3 virtualenv"
	fi
	export PATH="$VENV_DIR/bin:$PATH"

	# Ensure requirements are met
	PIP="$VENV_DIR/bin/pip"
	${PIP} install -r requirements.txt

	echo "Loading Python 3 virtualenv"
	source "$VENV_DIR/bin/activate"

	# Docker pull the nginx image
	docker pull "$NGINX_DOCKER_IMG" \
		|| die "Failed to pull docker image: $NGINX_DOCKER_IMG"
}

case "$1" in
	start)
		shift
		setup
		cd e2e-tests/edgebox
		[[ ! -f "$EDGEBOX_VARS_BACKUP" ]] && cp "$EDGEBOX_VARS" "$EDGEBOX_VARS_BACKUP"
		./edgebox_start.py "$@"
		;;
	cleanup)
		shift
		setup
		cd e2e-tests/edgebox
		./edgebox_cleanup.py "$@"
		;;
	reset)
		cd e2e-tests/edgebox
		if [[ -f "$EDGEBOX_VARS_BACKUP" ]]; then
			mv "$EDGEBOX_VARS" "${EDGEBOX_VARS}.$( date +'%Y-%m-%d-%H%M%S' )"
			cp "$EDGEBOX_VARS_BACKUP" "$EDGEBOX_VARS"
		fi
		;;

	help|-h|--help)
		echo "$USAGE"
		exit 0
		;;
	*)
		echo "$USAGE" >&2
		exit 1
		;;
esac
