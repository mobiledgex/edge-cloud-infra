# Copyright 2022 MobiledgeX, Inc
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

##
description: run Cluster-svc Alert tests

tests:
# user1 (operator) creates cloudlet with FAKE_CLUSTER_SVC_APPINST_FAIL envvar true
- name: user1 creates cloudlet for creating ClusterSvcAppInstFailure alert
  actions: [mcapi-create]
  apifile: '{{datadir2}}/mc_user1_alert_clustersvc.yml'
  apifilevars:
    cloudlet_org: tmus
    cloudlet_name: tmus-cloud-13
  curuserfile: '{{datadir2}}/mc_user1.yml'

- name: delete all emails and verify that mailbox is empty
  actions: [email-deleteall, email-check]
  compareyaml:
    yaml1: '{{outputdir}}/show-commands.yml'
    yaml2: '{{datadir2}}/mc_empty_list.yml'
    filetype: emaildata

# Admin creates an alert receiver 
- name: Admin creates cloudlet alert receiver
  actions: [mcapi-create]
  apifile: '{{datadir2}}/mc_admin_clustersvc_appinst_alert_receiver.yml'
  apifilevars:
    severity: error
    alert_receiver_name: emailClusterInstPlatformAlertReceiver
  curuserfile: '{{datadir2}}/mc_admin.yml'

# Admin verifies an alert receiver is created
- name: Verify cloudlet alert receiver was created
  actions: [mcapi-showalertreceivers]
  curuserfile: '{{datadir2}}/mc_admin.yml'
  compareyaml:
    yaml1: '{{outputdir}}/show-commands.yml'
    yaml2: '{{datadir2}}/mc_admin_clustersvc_appinst_alert_receiver_show.yml'
    yaml2vars:
      alert_receiver_name: emailClusterInstPlatformAlertReceiver
      severity: error
      cloudlet_org: tmus
      cloudlet_name: tmus-cloud-13

# user2 (developer) creates cluster and thus creates ClusterSvcAppInstFailure alert
- name: user2 creates clusterinst for creating ClusterSvcAppInstFailure alert
  actions: [mcapi-create]
  apifile: '{{datadir2}}/mc_user2_create_cluster.yml'
  apifilevars:
    cloudlet_org: tmus
    cloudlet_name: tmus-cloud-13
    cluster_name: tmusSmallCluster
    cluster_org: AcmeAppCo
  curuserfile: '{{datadir2}}/mc_user2.yml'

# admin verify email for the alert
- name: verify that email notification about the cluster-svc alert firing was sent
  actions: [email-check]
  curuserfile: '{{datadir2}}/mc_admin.yml'
  retrycount: 10
  retryintervalsec: 0.5
  compareyaml:
    yaml1: '{{outputdir}}/show-commands.yml'
    yaml2: '{{datadir2}}/emaildata_clustersvc_appinst_alert_firing.yml'
    yaml2vars:
      cloudlet_org: tmus
      cloudlet_name: tmus-cloud-13
      cluster_name: tmusSmallCluster
      cluster_org: AcmeAppCo
      alert_name: ClusterSvcAppInstFailure
      alert_receiver_name: emailClusterInstPlatformAlertReceiver
      scope: Platform
      region: local
      severity: error
    filetype: emaildata

# admin "show alert" - should match
- name: admin checks for cluster-svc appInst failure alert
  actions: [mcapi-showalerts]
  apifile: '{{datadir2}}/show_local_region.yml'
  curuserfile: '{{datadir2}}/mc_admin.yml'
  compareyaml:
    yaml1: '{{outputdir}}/show-commands.yml'
    yaml2: '{{datadir2}}/clustersvc_appinst_fail_alerts_show.yml'
    filetype: mcalerts

# As a developer (user2), "show alert" - should be empty
- name: user2 checks for cluster-svc appInst failure alert (empty)
  actions: [mcapi-showalerts]
  apifile: '{{datadir2}}/show_local_region.yml'
  curuserfile: '{{datadir2}}/mc_user2.yml'
  retrycount: 5
  retryintervalsec: 1
  compareyaml:
    yaml1: '{{outputdir}}/show-commands.yml'
    yaml2: '{{datadir2}}/mc_empty_list.yml'
    filetype: mcalerts

# user2 (developer) deletes cluster
- name: user2 deletes clusterinst for ClusterSvcAppInstFailure alert
  actions: [mcapi-delete]
  apifile: '{{datadir2}}/mc_user2_create_cluster.yml'
  apifilevars:
    cloudlet_org: tmus
    cloudlet_name: tmus-cloud-13
    cluster_name: tmusSmallCluster
    cluster_org: AcmeAppCo
  curuserfile: '{{datadir2}}/mc_user2.yml'

# After deleting offending cluster, admin's "show alert" - should be empty
- name: admin checks for cluster-svc appInst failure alert (empty)
  actions: [mcapi-showalerts]
  apifile: '{{datadir2}}/show_local_region.yml'
  curuserfile: '{{datadir2}}/mc_admin.yml'
  compareyaml:
    yaml1: '{{outputdir}}/show-commands.yml'
    yaml2: '{{datadir2}}/mc_empty_list.yml'
    filetype: mcalerts

# check for resolution email here, after cluster deletion
# admin verify email for the alert
- name: verify that email notification about the cluster-svc alert resolution was sent
  actions: [email-check]
  curuserfile: '{{datadir2}}/mc_admin.yml'
  retrycount: 5
  retryintervalsec: 1
  compareyaml:
    yaml1: '{{outputdir}}/show-commands.yml'
    yaml2: '{{datadir2}}/emaildata_clustersvc_appinst_alert_resolution.yml'
    yaml2vars:
      cloudlet_org: tmus
      cloudlet_name: tmus-cloud-13
      cluster_name: tmusSmallCluster
      cluster_org: AcmeAppCo
      alert_name: ClusterSvcAppInstFailure
      alert_receiver_name: emailClusterInstPlatformAlertReceiver
      scope: Platform
      region: local
      severity: error
    filetype: emaildata


# Admin deletes an alert receiver
- name: Admin deletes alert receiver
  actions: [mcapi-delete]
  apifile: '{{datadir2}}/mc_admin_clustersvc_appinst_alert_receiver.yml'
  apifilevars:
    severity: error
    alert_receiver_name: emailClusterInstPlatformAlertReceiver
  curuserfile: '{{datadir2}}/mc_admin.yml'

- name: verify no alert receivers are present
  actions: [mcapi-showalertreceivers]
  curuserfile: '{{datadir2}}/mc_admin.yml'
  compareyaml:
    yaml1: '{{outputdir}}/show-commands.yml'
    yaml2: '{{datadir2}}/mc_empty_object.yml'
    filetype: mcdata

# user1 (operator) deletes cloudlet
- name: user1 deletes cloudlet for ClusterSvcAppInstFailure alert
  actions: [mcapi-delete]
  apifile: '{{datadir2}}/mc_user1_alert_clustersvc.yml'
  apifilevars:
    cloudlet_org: tmus
    cloudlet_name: tmus-cloud-13
  curuserfile: '{{datadir2}}/mc_user1.yml'

# clean up emails
- name: delete all emails and verify that mailbox is empty
  actions: [email-deleteall, email-check]
  compareyaml:
    yaml1: '{{outputdir}}/show-commands.yml'
    yaml2: '{{datadir2}}/mc_empty_list.yml'
    filetype: emaildata

#  It would be good to also test alert resolution as well.
#  Though there isn't an easy way to change the env var on the cloudlet after the creation,
#  this is just a note for future.
