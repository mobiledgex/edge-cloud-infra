description: adds and deletes from mc
tests:
- name: verify no users to start
  actions: [mcapi-showusers]
  curuserfile: '{{datadir2}}/mc_admin.yml'
  compareyaml:
    yaml1: '{{outputdir}}/show-commands.yml'
    yaml2: '{{datadir2}}/mcappdata_empty.yml'
    filetype: mcusers

- name: verify no provisioned data to start
  actions: [mcapi-show]
  curuserfile: '{{datadir2}}/mc_admin.yml'
  compareyaml:
    yaml1: '{{outputdir}}/show-commands.yml'
    yaml2: '{{datadir2}}/mcappdata_empty.yml'
    filetype: mcdata

- name: create users
  actions: [mcapi-createusers]
  apifile: '{{datadir2}}/mc_user1.yml,{{datadir2}}/mc_user2.yml,{{datadir2}}/mc_user3.yml'

- name: admin creates controllers, flavors, sets up enterprise; verify it is there
  actions: [mcapi-create, mcapi-show]
  apifile: '{{datadir2}}/mc_admin_data.yml'
  curuserfile: '{{datadir2}}/mc_admin.yml'
  compareyaml:
    yaml1: '{{outputdir}}/show-commands.yml'
    yaml2: '{{datadir2}}/mc_admin_data.yml'
    filetype: mcdata

- name: user1 creates operator/cloudlets; verify it is there
  actions: [mcapi-create, mcapi-show]
  apifile: '{{datadir2}}/mc_user1_data.yml'
  curuserfile: '{{datadir2}}/mc_user1.yml'
  compareyaml:
    yaml1: '{{outputdir}}/show-commands.yml'
    yaml2: '{{datadir2}}/mc_user1_data_show.yml'
    filetype: mcdata

- name: user2 creates apps; verify it is there
  actions: [mcapi-create, mcapi-show]
  apifile: '{{datadir2}}/mc_user2_data.yml'
  curuserfile: '{{datadir2}}/mc_user2.yml'
  compareyaml:
    yaml1: '{{outputdir}}/show-commands.yml'
    yaml2: '{{datadir2}}/mc_user2_data_show.yml'
    filetype: mcdata

- name: enterprise user3 creates apps; verify it is there
  actions: [mcapi-create, mcapi-show]
  apifile: '{{datadir2}}/mc_user3_data.yml'
  curuserfile: '{{datadir2}}/mc_user3.yml'
  compareyaml:
    yaml1: '{{outputdir}}/show-commands.yml'
    yaml2: '{{datadir2}}/mc_user3_data_show.yml'
    filetype: mcdata

- name: test RunCommand
  actions: [mcapi-runcommand]
  apifile: '{{datadir2}}/mc_runcommand.yml'
  curuserfile: '{{datadir2}}/mc_user2.yml'

  #going to need a second one for operator, or just use mexadmin instead of user2
- name: check developer shepherd metrics in influx
  actions: [mcapi-showmetrics]
  apifile: '{{datadir2}}/mc_metrics_targets.yml'
  curuserfile: '{{datadir2}}/mc_user2.yml'
  compareyaml:
    yaml1: '{{outputdir}}/show-commands.yml'
    yaml2: '{{datadir2}}/mc_metrics_show.yml'
    filetype: mcmetrics

# Note that once user2's org is deleted, they have no orgs so cannot see any cloudlets
- name: user2 deletes apps; verify it is empty
  actions: [mcapi-delete, mcapi-show]
  apifile: '{{datadir2}}/mc_user2_data.yml'
  curuserfile: '{{datadir2}}/mc_user2.yml'
  compareyaml:
    yaml1: '{{outputdir}}/show-commands.yml'
    yaml2: '{{datadir2}}/mc_flavors.yml'
    filetype: mcdata

- name: enterprise user3 deletes apps; verify it is empty
  actions: [mcapi-delete, mcapi-show]
  apifile: '{{datadir2}}/mc_user3_data.yml'
  curuserfile: '{{datadir2}}/mc_user3.yml'
  compareyaml:
    yaml1: '{{outputdir}}/show-commands.yml'
    yaml2: '{{datadir2}}/mc_user3_empty_show.yml'
    filetype: mcdata

- name: user1 deletes operator/cloudlets; verify it is empty
  actions: [mcapi-delete, mcapi-show]
  apifile: '{{datadir2}}/mc_user1_data.yml'
  curuserfile: '{{datadir2}}/mc_user1.yml'
  compareyaml:
    yaml1: '{{outputdir}}/show-commands.yml'
    yaml2: '{{datadir2}}/mc_flavors.yml'
    filetype: mcdata

- name: admin delete controllers, flavors, verify it is empty
  actions: [mcapi-delete, mcapi-show]
  apifile: '{{datadir2}}/mc_admin_data.yml'
  curuserfile: '{{datadir2}}/mc_admin.yml'
  compareyaml:
    yaml1: '{{outputdir}}/show-commands.yml'
    yaml2: '{{datadir2}}/mcappdata_empty.yml'
    filetype: mcdata

- name: delete users, verify no users left
  actions: [mcapi-deleteusers, mcapi-showusers]
  apifile: '{{datadir2}}/mc_user1.yml,{{datadir2}}/mc_user2.yml,{{datadir2}}/mc_user3.yml'
  curuserfile: '{{datadir2}}/mc_admin.yml'
  compareyaml:
    yaml1: '{{outputdir}}/show-commands.yml'
    yaml2: '{{datadir2}}/mcappdata_empty.yml'
    filetype: mcusers
