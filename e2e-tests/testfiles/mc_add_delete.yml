description: adds and deletes from mc
tests:
- name: verify no users to start
  actions: [mcapi-showusers]
  curuserfile: '{{datadir2}}/mc_admin.yml'
  compareyaml:
    yaml1: '{{outputdir}}/show-commands.yml'
    yaml2: '{{datadir2}}/mcappdata_empty.yml'
    filetype: mcusers

- name: verify no provisioned data to start
  actions: [mcapi-show]
  curuserfile: '{{datadir2}}/mc_admin.yml'
  compareyaml:
    yaml1: '{{outputdir}}/show-commands.yml'
    yaml2: '{{datadir2}}/mcappdata_empty.yml'
    filetype: mcdata

- name: verify default config to start
  actions: [mcapi-configshow]
  curuserfile: '{{datadir2}}/mc_admin.yml'
  compareyaml:
    yaml1: '{{outputdir}}/show-commands.yml'
    yaml2: '{{datadir2}}/mcconfig_default.yml'
    filetype: mcconfig

- name: admin setup config so users can be created
  actions: [mcapi-configupdate,mcapi-configshow]
  apifile: '{{datadir2}}/mcconfig.yml'
  curuserfile: '{{datadir2}}/mc_admin.yml'
  compareyaml:
    yaml1: '{{outputdir}}/show-commands.yml'
    yaml2: '{{datadir2}}/mcconfig.yml'
    filetype: mcconfig

- name: create users
  actions: [mcapi-createusers]
  apifile: '{{datadir2}}/mc_user1.yml,{{datadir2}}/mc_user2.yml,{{datadir2}}/mc_user3.yml'

- name: admin creates controllers, flavors; verify it is there
  actions: [mcapi-create, mcapi-show]
  apifile: '{{datadir2}}/mc_admin_data.yml'
  curuserfile: '{{datadir2}}/mc_admin.yml'
  compareyaml:
    yaml1: '{{outputdir}}/show-commands.yml'
    yaml2: '{{datadir2}}/mc_admin_data.yml'
    filetype: mcdata

- name: user1 creates operator/cloudlets; verify it is there
  actions: [mcapi-create, mcapi-show]
  apifile: '{{datadir2}}/mc_user1_data.yml'
  curuserfile: '{{datadir2}}/mc_user1.yml'
  compareyaml:
    yaml1: '{{outputdir}}/show-commands.yml'
    yaml2: '{{datadir2}}/mc_user1_data_show.yml'
    filetype: mcdata

- name: admin creates reservable clusterinst on user1 cloudlet
  actions: [mcapi-create]
  apifile: '{{datadir2}}/mc_admin_reservable.yml'
  curuserfile: '{{datadir2}}/mc_admin.yml'

- name: user2 creates apps; verify it is there
  actions: [mcapi-create, mcapi-show]
  apifile: '{{datadir2}}/mc_user2_data.yml'
  curuserfile: '{{datadir2}}/mc_user2.yml'
  compareyaml:
    yaml1: '{{outputdir}}/show-commands.yml'
    yaml2: '{{datadir2}}/mc_user2_data_show.yml'
    filetype: mcdata

- name: enterprise user3 creates apps; verify it is there
  actions: [mcapi-create, mcapi-show]
  apifile: '{{datadir2}}/mc_user3_data.yml'
  curuserfile: '{{datadir2}}/mc_user3.yml'
  compareyaml:
    yaml1: '{{outputdir}}/show-commands.yml'
    yaml2: '{{datadir2}}/mc_user3_data_show.yml'
    filetype: mcdata

- name: test RunCommand
  actions: [mcapi-runcommand]
  apifile: '{{datadir2}}/mc_runcommand.yml'
  curuserfile: '{{datadir2}}/mc_user2.yml'

- name: test ShowLogs
  actions: [mcapi-showlogs]
  apifile: '{{datadir2}}/mc_showlogs.yml'
  curuserfile: '{{datadir2}}/mc_user2.yml'

- name: test AccessCloudlet
  actions: [mcapi-accesscloudlet]
  apifile: '{{datadir2}}/mc_accesscloudlet.yml'
  curuserfile: '{{datadir2}}/mc_admin.yml'

- name: test ShowNodes
  actions: [mcapi-nodeshow]
  curuserfile: '{{datadir2}}/mc_admin.yml'
  compareyaml:
    yaml1: '{{outputdir}}/show-commands.yml'
    yaml2: '{{datadir2}}/mc_shownode.yml'
    filetype: nodedata

- name: test orgs in use
  actions: [mcapi-delete-expecterr]
  apifile: '{{datadir2}}/mc_orgsinuse.yml'
  curuserfile: '{{datadir2}}/mc_admin.yml'
  compareyaml:
    yaml1: '{{outputdir}}/api-output.yml'
    yaml2: '{{datadir2}}/mc_orgsinuse_error.yml'
    filetype: orgdata

- includefile: autoprov.yml
  loops: 2

- includefile: mc_debugtest.yml

- name: Check AppInst, ClusterInst, and Cloudlet events
  actions: [mcapi-showevents]
  apifile: '{{datadir2}}/mc_events_targets.yml'
  curuserfile: '{{datadir2}}/mc_admin.yml'
  compareyaml:
    yaml1: '{{outputdir}}/show-commands.yml'
    yaml2: '{{datadir2}}/mc_events_show.yml'
    filetype: mcmetrics

- includefile: alerttest.yml

  #going to need a second one for operator, or just use mexadmin instead of user2
- name: check developer shepherd metrics in influx (separate calls)
  actions: [mcapi-showmetrics]
  apifile: '{{datadir2}}/mc_metrics_targets.yml'
  curuserfile: '{{datadir2}}/mc_user2.yml'
  compareyaml:
    yaml1: '{{outputdir}}/show-commands.yml'
    yaml2: '{{datadir2}}/mc_metrics_show.yml'
    filetype: mcmetrics

- name: check developer shepherd metrics in influx (single call)
  actions: [mcapi-showmetricsall]
  apifile: '{{datadir2}}/mc_metrics_targets.yml'
  curuserfile: '{{datadir2}}/mc_user2.yml'
  compareyaml:
    yaml1: '{{outputdir}}/show-commands.yml'
    yaml2: '{{datadir2}}/mc_metrics_show.yml'
    filetype: mcmetrics

# Note that once user2's org is deleted, they have no orgs so cannot see any cloudlets
- name: user2 deletes apps; verify it is empty
  actions: [mcapi-delete, mcapi-show]
  apifile: '{{datadir2}}/mc_user2_data.yml'
  curuserfile: '{{datadir2}}/mc_user2.yml'
  compareyaml:
    yaml1: '{{outputdir}}/show-commands.yml'
    yaml2: '{{datadir2}}/mc_flavors.yml'
    filetype: mcdata

- name: enterprise user3 deletes apps; verify it is empty
  actions: [mcapi-delete, mcapi-show]
  apifile: '{{datadir2}}/mc_user3_data.yml'
  curuserfile: '{{datadir2}}/mc_user3.yml'
  compareyaml:
    yaml1: '{{outputdir}}/show-commands.yml'
    yaml2: '{{datadir2}}/mc_user3_empty_show.yml'
    filetype: mcdata

- name: admin deletes reservable ClusterInst
  actions: [mcapi-delete]
  apifile: '{{datadir2}}/mc_admin_reservable.yml'
  curuserfile: '{{datadir2}}/mc_admin.yml'

- name: user1 deletes operator/cloudlets; verify it is empty
  actions: [mcapi-delete, mcapi-show]
  apifile: '{{datadir2}}/mc_user1_data.yml'
  curuserfile: '{{datadir2}}/mc_user1.yml'
  compareyaml:
    yaml1: '{{outputdir}}/show-commands.yml'
    yaml2: '{{datadir2}}/mc_flavors.yml'
    filetype: mcdata

- name: admin delete controllers, flavors, verify it is empty
  actions: [mcapi-delete, mcapi-show]
  apifile: '{{datadir2}}/mc_admin_data.yml'
  curuserfile: '{{datadir2}}/mc_admin.yml'
  compareyaml:
    yaml1: '{{outputdir}}/show-commands.yml'
    yaml2: '{{datadir2}}/mcappdata_empty.yml'
    filetype: mcdata

- name: delete users, verify no users left
  actions: [mcapi-deleteusers, mcapi-showusers]
  apifile: '{{datadir2}}/mc_user1.yml,{{datadir2}}/mc_user2.yml,{{datadir2}}/mc_user3.yml'
  curuserfile: '{{datadir2}}/mc_admin.yml'
  compareyaml:
    yaml1: '{{outputdir}}/show-commands.yml'
    yaml2: '{{datadir2}}/mcappdata_empty.yml'
    filetype: mcusers

- name: admin reset config
  actions: [mcapi-configreset,mcapi-configshow]
  curuserfile: '{{datadir2}}/mc_admin.yml'
  compareyaml:
    yaml1: '{{outputdir}}/show-commands.yml'
    yaml2: '{{datadir2}}/mcconfig_default.yml'
    filetype: mcconfig
