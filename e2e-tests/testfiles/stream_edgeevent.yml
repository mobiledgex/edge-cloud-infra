description: StreamEdgeEvent persistent connection tests

tests:
- name: Send initial edge event to start persistent connection
  apifile: "{{datadir2}}/edgeevent-req.yml"
  actions: [dmeapi-edgeeventinit]
  compareyaml:
    yaml1: "{{outputdir}}/edgeeventinit.yml"
    yaml2: "{{datadir2}}/edgeevent-init-response.yml"
    filetype: streamedgeevent

- name: Start persistent connection and send dummy latency samples to server
  apifile: "{{datadir2}}/edgeevent-req.yml"
  actions: [dmeapi-edgeeventlatency]
  compareyaml:
    yaml1: "{{outputdir}}/edgeeventlatency.yml"
    yaml2: "{{datadir2}}/edgeevent-latency-response.yml"
    filetype: streamedgeevent

- name: sleep, allow time for metrics to be pushed to influxDB
  actions: [sleep=1]

- name: Start persistent connection, send new gps location, expect new cloudlet
  apifile: "{{datadir2}}/edgeevent-req.yml"
  actions: [dmeapi-edgeeventnewcloudlet]
  compareyaml:
    yaml1: "{{outputdir}}/edgeeventnewcloudlet.yml"
    yaml2: "{{datadir2}}/edgeevent-newcloudlet-response.yml"
    filetype: streamedgeevent

- name: Check client app metrics
  actions: [mcapi-showclientappmetrics]
  apifile: '{{datadir2}}/mc_metrics_targets.yml'
  curuserfile: '{{datadir2}}/mc_admin.yml'
  retrycount: 30
  retryintervalsec: 0.5
  compareyaml:
    yaml1: '{{outputdir}}/show-commands.yml'
    yaml2: '{{datadir2}}/mc_clientappmetrics_show.yml'
    filetype: mcoptmetrics

- name: Check client cloudlet metrics
  actions: [mcapi-showclientcloudletmetrics]
  apifile: '{{datadir2}}/mc_metrics_targets.yml'
  curuserfile: '{{datadir2}}/mc_admin.yml'
  compareyaml:
    yaml1: '{{outputdir}}/show-commands.yml'
    yaml2: '{{datadir2}}/mc_clientcloudletmetrics_show.yml'
    filetype: mcoptmetrics
