// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: exec.proto

package ctrlclient

import (
	"context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	"github.com/mobiledgex/edge-cloud-infra/mc/ormutil"
	edgeproto "github.com/mobiledgex/edge-cloud/edgeproto"
	"github.com/mobiledgex/edge-cloud/log"
	_ "github.com/mobiledgex/edge-cloud/protogen"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Auto-generated code: DO NOT EDIT

func RunCommandObj(ctx context.Context, rc *ormutil.RegionContext, obj *edgeproto.ExecRequest, connObj ClientConnMgr) (*edgeproto.ExecRequest, error) {
	conn, err := connObj.GetRegionConn(ctx, rc.Region)
	if err != nil {
		return nil, err
	}
	api := edgeproto.NewExecApiClient(conn)
	log.SpanLog(ctx, log.DebugLevelApi, "start controller api")
	defer log.SpanLog(ctx, log.DebugLevelApi, "finish controller api")
	return api.RunCommand(ctx, obj)
}

func RunConsoleObj(ctx context.Context, rc *ormutil.RegionContext, obj *edgeproto.ExecRequest, connObj ClientConnMgr) (*edgeproto.ExecRequest, error) {
	conn, err := connObj.GetRegionConn(ctx, rc.Region)
	if err != nil {
		return nil, err
	}
	api := edgeproto.NewExecApiClient(conn)
	log.SpanLog(ctx, log.DebugLevelApi, "start controller api")
	defer log.SpanLog(ctx, log.DebugLevelApi, "finish controller api")
	return api.RunConsole(ctx, obj)
}

func ShowLogsObj(ctx context.Context, rc *ormutil.RegionContext, obj *edgeproto.ExecRequest, connObj ClientConnMgr) (*edgeproto.ExecRequest, error) {
	conn, err := connObj.GetRegionConn(ctx, rc.Region)
	if err != nil {
		return nil, err
	}
	api := edgeproto.NewExecApiClient(conn)
	log.SpanLog(ctx, log.DebugLevelApi, "start controller api")
	defer log.SpanLog(ctx, log.DebugLevelApi, "finish controller api")
	return api.ShowLogs(ctx, obj)
}

func AccessCloudletObj(ctx context.Context, rc *ormutil.RegionContext, obj *edgeproto.ExecRequest, connObj ClientConnMgr) (*edgeproto.ExecRequest, error) {
	conn, err := connObj.GetRegionConn(ctx, rc.Region)
	if err != nil {
		return nil, err
	}
	api := edgeproto.NewExecApiClient(conn)
	log.SpanLog(ctx, log.DebugLevelApi, "start controller api")
	defer log.SpanLog(ctx, log.DebugLevelApi, "finish controller api")
	return api.AccessCloudlet(ctx, obj)
}
