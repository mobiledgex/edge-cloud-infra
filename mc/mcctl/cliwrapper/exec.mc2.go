// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: exec.proto

package cliwrapper

import edgeproto "github.com/mobiledgex/edge-cloud/edgeproto"
import "net/http"
import "strings"
import "github.com/mobiledgex/edge-cloud-infra/mc/ormapi"
import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/mobiledgex/edge-cloud/protogen"
import _ "github.com/gogo/protobuf/gogoproto"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Auto-generated code: DO NOT EDIT

func (s *Client) RunCommand(uri, token string, in *ormapi.RegionExecRequest) (*edgeproto.ExecRequest, int, error) {
	args := []string{"region", "RunCommand"}
	out := edgeproto.ExecRequest{}
	noconfig := strings.Split("Offer,Answer,Err,Timeout,Log,Console", ",")
	st, err := s.runObjs(uri, token, args, in, &out, withIgnore(noconfig))
	if err != nil {
		return nil, st, err
	}
	return &out, st, err
}
func (s *Client) RunCommandStream(uri, token string, in *ormapi.RegionExecRequest) ([]ormapi.WSStreamPayload, int, error) {
	return nil, http.StatusBadRequest, fmt.Errorf("not supported")
}

func (s *Client) RunConsole(uri, token string, in *ormapi.RegionExecRequest) (*edgeproto.ExecRequest, int, error) {
	args := []string{"region", "RunConsole"}
	out := edgeproto.ExecRequest{}
	noconfig := strings.Split("Offer,Answer,Err,Timeout,Log,Cmd,Console", ",")
	st, err := s.runObjs(uri, token, args, in, &out, withIgnore(noconfig))
	if err != nil {
		return nil, st, err
	}
	return &out, st, err
}
func (s *Client) RunConsoleStream(uri, token string, in *ormapi.RegionExecRequest) ([]ormapi.WSStreamPayload, int, error) {
	return nil, http.StatusBadRequest, fmt.Errorf("not supported")
}

func (s *Client) ShowLogs(uri, token string, in *ormapi.RegionExecRequest) (*edgeproto.ExecRequest, int, error) {
	args := []string{"region", "ShowLogs"}
	out := edgeproto.ExecRequest{}
	noconfig := strings.Split("Offer,Answer,Err,Timeout,Cmd,Console", ",")
	st, err := s.runObjs(uri, token, args, in, &out, withIgnore(noconfig))
	if err != nil {
		return nil, st, err
	}
	return &out, st, err
}
func (s *Client) ShowLogsStream(uri, token string, in *ormapi.RegionExecRequest) ([]ormapi.WSStreamPayload, int, error) {
	return nil, http.StatusBadRequest, fmt.Errorf("not supported")
}
