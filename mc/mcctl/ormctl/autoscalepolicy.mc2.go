// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: autoscalepolicy.proto

package ormctl

import edgeproto "github.com/mobiledgex/edge-cloud/edgeproto"
import "strings"
import "github.com/mobiledgex/edge-cloud-infra/mc/ormapi"
import "github.com/mobiledgex/edge-cloud/cli"
import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/googleapis/google/api"
import _ "github.com/mobiledgex/edge-cloud/protogen"
import _ "github.com/gogo/protobuf/gogoproto"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Auto-generated code: DO NOT EDIT

var CreateAutoScalePolicyCmd = &cli.Command{
	Use:          "CreateAutoScalePolicy",
	RequiredArgs: strings.Join(append([]string{"region"}, CreateAutoScalePolicyRequiredArgs...), " "),
	OptionalArgs: strings.Join(CreateAutoScalePolicyOptionalArgs, " "),
	AliasArgs:    strings.Join(AutoScalePolicyAliasArgs, " "),
	SpecialArgs:  &AutoScalePolicySpecialArgs,
	Comments:     addRegionComment(AutoScalePolicyComments),
	ReqData:      &ormapi.RegionAutoScalePolicy{},
	ReplyData:    &edgeproto.Result{},
	Run:          runRest("/auth/ctrl/CreateAutoScalePolicy"),
}

var DeleteAutoScalePolicyCmd = &cli.Command{
	Use:          "DeleteAutoScalePolicy",
	RequiredArgs: strings.Join(append([]string{"region"}, AutoScalePolicyRequiredArgs...), " "),
	OptionalArgs: strings.Join(AutoScalePolicyOptionalArgs, " "),
	AliasArgs:    strings.Join(AutoScalePolicyAliasArgs, " "),
	SpecialArgs:  &AutoScalePolicySpecialArgs,
	Comments:     addRegionComment(AutoScalePolicyComments),
	ReqData:      &ormapi.RegionAutoScalePolicy{},
	ReplyData:    &edgeproto.Result{},
	Run:          runRest("/auth/ctrl/DeleteAutoScalePolicy"),
}

var UpdateAutoScalePolicyCmd = &cli.Command{
	Use:          "UpdateAutoScalePolicy",
	RequiredArgs: strings.Join(append([]string{"region"}, AutoScalePolicyRequiredArgs...), " "),
	OptionalArgs: strings.Join(AutoScalePolicyOptionalArgs, " "),
	AliasArgs:    strings.Join(AutoScalePolicyAliasArgs, " "),
	SpecialArgs:  &AutoScalePolicySpecialArgs,
	Comments:     addRegionComment(AutoScalePolicyComments),
	ReqData:      &ormapi.RegionAutoScalePolicy{},
	ReplyData:    &edgeproto.Result{},
	Run: runRest("/auth/ctrl/UpdateAutoScalePolicy",
		withSetFieldsFunc(setUpdateAutoScalePolicyFields),
	),
}

func setUpdateAutoScalePolicyFields(in map[string]interface{}) {
	// get map for edgeproto object in region struct
	obj := in[strings.ToLower("AutoScalePolicy")]
	if obj == nil {
		return
	}
	objmap, ok := obj.(map[string]interface{})
	if !ok {
		return
	}
	objmap["fields"] = cli.GetSpecifiedFields(objmap, &edgeproto.AutoScalePolicy{}, cli.JsonNamespace)
}

var ShowAutoScalePolicyCmd = &cli.Command{
	Use:          "ShowAutoScalePolicy",
	RequiredArgs: "region",
	OptionalArgs: strings.Join(append(AutoScalePolicyRequiredArgs, AutoScalePolicyOptionalArgs...), " "),
	AliasArgs:    strings.Join(AutoScalePolicyAliasArgs, " "),
	SpecialArgs:  &AutoScalePolicySpecialArgs,
	Comments:     addRegionComment(AutoScalePolicyComments),
	ReqData:      &ormapi.RegionAutoScalePolicy{},
	ReplyData:    &edgeproto.AutoScalePolicy{},
	Run:          runRest("/auth/ctrl/ShowAutoScalePolicy"),
	StreamOut:    true,
}

var AutoScalePolicyApiCmds = []*cli.Command{
	CreateAutoScalePolicyCmd,
	DeleteAutoScalePolicyCmd,
	UpdateAutoScalePolicyCmd,
	ShowAutoScalePolicyCmd,
}

var CreateAutoScalePolicyRequiredArgs = []string{
	"developer",
	"name",
	"minnodes",
	"maxnodes",
}
var CreateAutoScalePolicyOptionalArgs = []string{
	"scaleupcputhresh",
	"scaledowncputhresh",
	"triggertimesec",
}
var PolicyKeyRequiredArgs = []string{}
var PolicyKeyOptionalArgs = []string{
	"developer",
	"name",
}
var PolicyKeyAliasArgs = []string{
	"developer=policykey.developer",
	"name=policykey.name",
}
var PolicyKeyComments = map[string]string{
	"developer": "Name of the Developer that this policy belongs to",
	"name":      "Policy name",
}
var PolicyKeySpecialArgs = map[string]string{}
var AutoScalePolicyRequiredArgs = []string{
	"developer",
	"name",
}
var AutoScalePolicyOptionalArgs = []string{
	"minnodes",
	"maxnodes",
	"scaleupcputhresh",
	"scaledowncputhresh",
	"triggertimesec",
}
var AutoScalePolicyAliasArgs = []string{
	"developer=autoscalepolicy.key.developer",
	"name=autoscalepolicy.key.name",
	"minnodes=autoscalepolicy.minnodes",
	"maxnodes=autoscalepolicy.maxnodes",
	"scaleupcputhresh=autoscalepolicy.scaleupcputhresh",
	"scaledowncputhresh=autoscalepolicy.scaledowncputhresh",
	"triggertimesec=autoscalepolicy.triggertimesec",
}
var AutoScalePolicyComments = map[string]string{
	"developer":          "Name of the Developer that this policy belongs to",
	"name":               "Policy name",
	"minnodes":           "Minimum number of cluster nodes",
	"maxnodes":           "Maximum number of cluster nodes",
	"scaleupcputhresh":   "Scale up cpu threshold (percentage 1 to 100)",
	"scaledowncputhresh": "Scale down cpu threshold (percentage 1 to 100)",
	"triggertimesec":     "Trigger time defines how long trigger threshold must be satified in seconds before acting upon it.",
}
var AutoScalePolicySpecialArgs = map[string]string{}
