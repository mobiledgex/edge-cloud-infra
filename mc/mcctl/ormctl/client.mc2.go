// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: client.proto

package ormctl

import edgeproto "github.com/mobiledgex/edge-cloud/edgeproto"
import "strings"
import "github.com/mobiledgex/edge-cloud-infra/mc/ormapi"
import "github.com/mobiledgex/edge-cloud/cli"
import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/googleapis/google/api"
import _ "github.com/mobiledgex/edge-cloud/protogen"
import _ "github.com/mobiledgex/edge-cloud/d-match-engine/dme-proto"
import _ "github.com/gogo/protobuf/gogoproto"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Auto-generated code: DO NOT EDIT

var ShowAppInstClientCmd = &cli.Command{
	Use:                  "ShowAppInstClient",
	RequiredArgs:         "region",
	OptionalArgs:         strings.Join(append(AppInstClientKeyRequiredArgs, AppInstClientKeyOptionalArgs...), " "),
	AliasArgs:            strings.Join(AppInstClientKeyAliasArgs, " "),
	SpecialArgs:          &AppInstClientKeySpecialArgs,
	Comments:             addRegionComment(AppInstClientKeyComments),
	ReqData:              &ormapi.RegionAppInstClientKey{},
	ReplyData:            &edgeproto.AppInstClient{},
	Run:                  runRest("/auth/ctrl/ShowAppInstClient"),
	StreamOut:            true,
	StreamOutIncremental: true,
}

var AppInstClientApiCmds = []*cli.Command{
	ShowAppInstClientCmd,
}

var AppInstClientKeyRequiredArgs = []string{
	"developer",
	"appname",
	"appvers",
	"key.clusterinstkey.clusterkey.name",
	"operator",
	"cloudlet",
	"key.clusterinstkey.developer",
}
var AppInstClientKeyOptionalArgs = []string{
	"uuid",
}
var AppInstClientKeyAliasArgs = []string{
	"developer=appinstclientkey.key.appkey.developerkey.name",
	"appname=appinstclientkey.key.appkey.name",
	"appvers=appinstclientkey.key.appkey.version",
	"key.clusterinstkey.clusterkey.name=appinstclientkey.key.clusterinstkey.clusterkey.name",
	"operator=appinstclientkey.key.clusterinstkey.cloudletkey.operatorkey.name",
	"cloudlet=appinstclientkey.key.clusterinstkey.cloudletkey.name",
	"key.clusterinstkey.developer=appinstclientkey.key.clusterinstkey.developer",
	"uuid=appinstclientkey.uuid",
}
var AppInstClientKeyComments = map[string]string{
	"developer":                          "Organization or Company Name that a Developer is part of",
	"appname":                            "App name",
	"appvers":                            "App version",
	"key.clusterinstkey.clusterkey.name": "Cluster name",
	"operator":                           "Company or Organization name of the operator",
	"cloudlet":                           "Name of the cloudlet",
	"key.clusterinstkey.developer":       "Name of Developer that this cluster belongs to",
	"uuid":                               "App name",
}
var AppInstClientKeySpecialArgs = map[string]string{}
var AppInstClientRequiredArgs = []string{}
var AppInstClientOptionalArgs = []string{
	"clientkey.key.appkey.developerkey.name",
	"clientkey.key.appkey.name",
	"clientkey.key.appkey.version",
	"clientkey.key.clusterinstkey.clusterkey.name",
	"clientkey.key.clusterinstkey.cloudletkey.operatorkey.name",
	"clientkey.key.clusterinstkey.cloudletkey.name",
	"clientkey.key.clusterinstkey.developer",
	"clientkey.uuid",
	"location.latitude",
	"location.longitude",
	"location.horizontalaccuracy",
	"location.verticalaccuracy",
	"location.altitude",
	"location.course",
	"location.speed",
	"location.timestamp.seconds",
	"location.timestamp.nanos",
	"notifyid",
	"status",
}
var AppInstClientAliasArgs = []string{
	"clientkey.key.appkey.developerkey.name=appinstclient.clientkey.key.appkey.developerkey.name",
	"clientkey.key.appkey.name=appinstclient.clientkey.key.appkey.name",
	"clientkey.key.appkey.version=appinstclient.clientkey.key.appkey.version",
	"clientkey.key.clusterinstkey.clusterkey.name=appinstclient.clientkey.key.clusterinstkey.clusterkey.name",
	"clientkey.key.clusterinstkey.cloudletkey.operatorkey.name=appinstclient.clientkey.key.clusterinstkey.cloudletkey.operatorkey.name",
	"clientkey.key.clusterinstkey.cloudletkey.name=appinstclient.clientkey.key.clusterinstkey.cloudletkey.name",
	"clientkey.key.clusterinstkey.developer=appinstclient.clientkey.key.clusterinstkey.developer",
	"clientkey.uuid=appinstclient.clientkey.uuid",
	"location.latitude=appinstclient.location.latitude",
	"location.longitude=appinstclient.location.longitude",
	"location.horizontalaccuracy=appinstclient.location.horizontalaccuracy",
	"location.verticalaccuracy=appinstclient.location.verticalaccuracy",
	"location.altitude=appinstclient.location.altitude",
	"location.course=appinstclient.location.course",
	"location.speed=appinstclient.location.speed",
	"location.timestamp.seconds=appinstclient.location.timestamp.seconds",
	"location.timestamp.nanos=appinstclient.location.timestamp.nanos",
	"notifyid=appinstclient.notifyid",
	"status=appinstclient.status",
}
var AppInstClientComments = map[string]string{
	"clientkey.key.appkey.developerkey.name":                    "Organization or Company Name that a Developer is part of",
	"clientkey.key.appkey.name":                                 "App name",
	"clientkey.key.appkey.version":                              "App version",
	"clientkey.key.clusterinstkey.clusterkey.name":              "Cluster name",
	"clientkey.key.clusterinstkey.cloudletkey.operatorkey.name": "Company or Organization name of the operator",
	"clientkey.key.clusterinstkey.cloudletkey.name":             "Name of the cloudlet",
	"clientkey.key.clusterinstkey.developer":                    "Name of Developer that this cluster belongs to",
	"clientkey.uuid":                                            "App name",
	"location.latitude":                                         "latitude in WGS 84 coordinates",
	"location.longitude":                                        "longitude in WGS 84 coordinates",
	"location.horizontalaccuracy":                               "horizontal accuracy (radius in meters)",
	"location.verticalaccuracy":                                 "vertical accuracy (meters)",
	"location.altitude":                                         "On android only lat and long are guaranteed to be supplied altitude in meters",
	"location.course":                                           "course (IOS) / bearing (Android) (degrees east relative to true north)",
	"location.speed":                                            "speed (IOS) / velocity (Android) (meters/sec)",
	"notifyid":                                                  "Id of client assigned by server (internal use only)",
	"status":                                                    "Status return, one of FindUnknown, FindFound, FindNotfound",
}
var AppInstClientSpecialArgs = map[string]string{}
