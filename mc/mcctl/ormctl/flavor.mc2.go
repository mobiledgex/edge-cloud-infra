// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: flavor.proto

package ormctl

import (
	fmt "fmt"
	"github.com/edgexr/edge-cloud-infra/mc/ormapi"
	edgeproto "github.com/edgexr/edge-cloud/edgeproto"
	_ "github.com/edgexr/edge-cloud/protogen"
	_ "github.com/gogo/googleapis/google/api"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	math "math"
	"strings"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Auto-generated code: DO NOT EDIT

var CreateFlavorCmd = &ApiCommand{
	Name:         "CreateFlavor",
	Use:          "create",
	Short:        "Create a Flavor",
	RequiredArgs: "region " + strings.Join(CreateFlavorRequiredArgs, " "),
	OptionalArgs: strings.Join(CreateFlavorOptionalArgs, " "),
	AliasArgs:    strings.Join(FlavorAliasArgs, " "),
	SpecialArgs:  &FlavorSpecialArgs,
	Comments:     addRegionComment(FlavorComments),
	NoConfig:     "DeletePrepare",
	ReqData:      &ormapi.RegionFlavor{},
	ReplyData:    &edgeproto.Result{},
	Path:         "/auth/ctrl/CreateFlavor",
	ProtobufApi:  true,
}

var DeleteFlavorCmd = &ApiCommand{
	Name:         "DeleteFlavor",
	Use:          "delete",
	Short:        "Delete a Flavor",
	RequiredArgs: "region " + strings.Join(FlavorRequiredArgs, " "),
	OptionalArgs: strings.Join(FlavorOptionalArgs, " "),
	AliasArgs:    strings.Join(FlavorAliasArgs, " "),
	SpecialArgs:  &FlavorSpecialArgs,
	Comments:     addRegionComment(FlavorComments),
	NoConfig:     "DeletePrepare",
	ReqData:      &ormapi.RegionFlavor{},
	ReplyData:    &edgeproto.Result{},
	Path:         "/auth/ctrl/DeleteFlavor",
	ProtobufApi:  true,
}

var UpdateFlavorCmd = &ApiCommand{
	Name:         "UpdateFlavor",
	Use:          "update",
	Short:        "Update a Flavor",
	RequiredArgs: "region " + strings.Join(FlavorRequiredArgs, " "),
	OptionalArgs: strings.Join(FlavorOptionalArgs, " "),
	AliasArgs:    strings.Join(FlavorAliasArgs, " "),
	SpecialArgs:  &FlavorSpecialArgs,
	Comments:     addRegionComment(FlavorComments),
	NoConfig:     "DeletePrepare",
	ReqData:      &ormapi.RegionFlavor{},
	ReplyData:    &edgeproto.Result{},
	Path:         "/auth/ctrl/UpdateFlavor",
	ProtobufApi:  true,
}

var ShowFlavorCmd = &ApiCommand{
	Name:         "ShowFlavor",
	Use:          "show",
	Short:        "Show Flavors",
	RequiredArgs: "region",
	OptionalArgs: strings.Join(append(FlavorRequiredArgs, FlavorOptionalArgs...), " "),
	AliasArgs:    strings.Join(FlavorAliasArgs, " "),
	SpecialArgs:  &FlavorSpecialArgs,
	Comments:     addRegionComment(FlavorComments),
	NoConfig:     "DeletePrepare",
	ReqData:      &ormapi.RegionFlavor{},
	ReplyData:    &edgeproto.Flavor{},
	Path:         "/auth/ctrl/ShowFlavor",
	StreamOut:    true,
	ProtobufApi:  true,
}

var AddFlavorResCmd = &ApiCommand{
	Name:         "AddFlavorRes",
	Use:          "addres",
	Short:        "Add Optional Resource",
	RequiredArgs: "region " + strings.Join(FlavorRequiredArgs, " "),
	OptionalArgs: strings.Join(FlavorOptionalArgs, " "),
	AliasArgs:    strings.Join(FlavorAliasArgs, " "),
	SpecialArgs:  &FlavorSpecialArgs,
	Comments:     addRegionComment(FlavorComments),
	NoConfig:     "DeletePrepare",
	ReqData:      &ormapi.RegionFlavor{},
	ReplyData:    &edgeproto.Result{},
	Path:         "/auth/ctrl/AddFlavorRes",
	ProtobufApi:  true,
}

var RemoveFlavorResCmd = &ApiCommand{
	Name:         "RemoveFlavorRes",
	Use:          "removeres",
	Short:        "Remove Optional Resource",
	RequiredArgs: "region " + strings.Join(FlavorRequiredArgs, " "),
	OptionalArgs: strings.Join(FlavorOptionalArgs, " "),
	AliasArgs:    strings.Join(FlavorAliasArgs, " "),
	SpecialArgs:  &FlavorSpecialArgs,
	Comments:     addRegionComment(FlavorComments),
	NoConfig:     "DeletePrepare",
	ReqData:      &ormapi.RegionFlavor{},
	ReplyData:    &edgeproto.Result{},
	Path:         "/auth/ctrl/RemoveFlavorRes",
	ProtobufApi:  true,
}
var FlavorApiCmds = []*ApiCommand{
	CreateFlavorCmd,
	DeleteFlavorCmd,
	UpdateFlavorCmd,
	ShowFlavorCmd,
	AddFlavorResCmd,
	RemoveFlavorResCmd,
}

const FlavorGroup = "Flavor"

func init() {
	AllApis.AddGroup(FlavorGroup, "Manage Flavors", FlavorApiCmds)
}

var CreateFlavorRequiredArgs = []string{
	"name",
	"ram",
	"vcpus",
	"disk",
}
var CreateFlavorOptionalArgs = []string{
	"optresmap",
}
var FlavorRequiredArgs = []string{
	"name",
}
var FlavorOptionalArgs = []string{
	"ram",
	"vcpus",
	"disk",
	"optresmap",
}
var FlavorAliasArgs = []string{
	"fields=flavor.fields",
	"name=flavor.key.name",
	"ram=flavor.ram",
	"vcpus=flavor.vcpus",
	"disk=flavor.disk",
	"optresmap=flavor.optresmap",
	"deleteprepare=flavor.deleteprepare",
}
var FlavorComments = map[string]string{
	"fields":        "Fields are used for the Update API to specify which fields to apply",
	"name":          "Flavor name",
	"ram":           "RAM in megabytes",
	"vcpus":         "Number of virtual CPUs",
	"disk":          "Amount of disk space in gigabytes",
	"optresmap":     "Optional Resources request, key = gpu form: $resource=$kind:[$alias]$count ex: optresmap=gpu=vgpu:nvidia-63:1, specify optresmap:empty=true to clear",
	"deleteprepare": "Preparing to be deleted",
}
var FlavorSpecialArgs = map[string]string{
	"flavor.fields":    "StringArray",
	"flavor.optresmap": "StringToString",
}
