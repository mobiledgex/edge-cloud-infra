// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: gputagtable.proto

package ormctl

import edgeproto "github.com/mobiledgex/edge-cloud/edgeproto"
import "strings"
import "github.com/mobiledgex/edge-cloud-infra/mc/ormapi"
import "github.com/mobiledgex/edge-cloud/cli"
import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/googleapis/google/api"
import _ "github.com/mobiledgex/edge-cloud/protogen"
import _ "github.com/gogo/protobuf/gogoproto"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Auto-generated code: DO NOT EDIT

var CreateGpuTagTableCmd = &cli.Command{
	Use:          "CreateGpuTagTable",
	RequiredArgs: strings.Join(append([]string{"region"}, GpuTagTableRequiredArgs...), " "),
	OptionalArgs: strings.Join(GpuTagTableOptionalArgs, " "),
	AliasArgs:    strings.Join(GpuTagTableAliasArgs, " "),
	SpecialArgs:  &GpuTagTableSpecialArgs,
	Comments:     addRegionComment(GpuTagTableComments),
	ReqData:      &ormapi.RegionGpuTagTable{},
	ReplyData:    &edgeproto.Result{},
	Run:          runRest("/auth/ctrl/CreateGpuTagTable"),
}

var DeleteGpuTagTableCmd = &cli.Command{
	Use:          "DeleteGpuTagTable",
	RequiredArgs: strings.Join(append([]string{"region"}, GpuTagTableRequiredArgs...), " "),
	OptionalArgs: strings.Join(GpuTagTableOptionalArgs, " "),
	AliasArgs:    strings.Join(GpuTagTableAliasArgs, " "),
	SpecialArgs:  &GpuTagTableSpecialArgs,
	Comments:     addRegionComment(GpuTagTableComments),
	ReqData:      &ormapi.RegionGpuTagTable{},
	ReplyData:    &edgeproto.Result{},
	Run:          runRest("/auth/ctrl/DeleteGpuTagTable"),
}

var UpdateGpuTagTableCmd = &cli.Command{
	Use:          "UpdateGpuTagTable",
	RequiredArgs: strings.Join(append([]string{"region"}, GpuTagTableRequiredArgs...), " "),
	OptionalArgs: strings.Join(GpuTagTableOptionalArgs, " "),
	AliasArgs:    strings.Join(GpuTagTableAliasArgs, " "),
	SpecialArgs:  &GpuTagTableSpecialArgs,
	Comments:     addRegionComment(GpuTagTableComments),
	ReqData:      &ormapi.RegionGpuTagTable{},
	ReplyData:    &edgeproto.Result{},
	Run: runRest("/auth/ctrl/UpdateGpuTagTable",
		withSetFieldsFunc(setUpdateGpuTagTableFields),
	),
}

func setUpdateGpuTagTableFields(in map[string]interface{}) {
	// get map for edgeproto object in region struct
	obj := in[strings.ToLower("GpuTagTable")]
	if obj == nil {
		return
	}
	objmap, ok := obj.(map[string]interface{})
	if !ok {
		return
	}
	objmap["fields"] = cli.GetSpecifiedFields(objmap, &edgeproto.GpuTagTable{}, cli.JsonNamespace)
}

var ShowGpuTagTableCmd = &cli.Command{
	Use:          "ShowGpuTagTable",
	RequiredArgs: strings.Join(append([]string{"region"}, GpuTagTableRequiredArgs...), " "),
	OptionalArgs: strings.Join(GpuTagTableOptionalArgs, " "),
	AliasArgs:    strings.Join(GpuTagTableAliasArgs, " "),
	SpecialArgs:  &GpuTagTableSpecialArgs,
	Comments:     addRegionComment(GpuTagTableComments),
	ReqData:      &ormapi.RegionGpuTagTable{},
	ReplyData:    &edgeproto.GpuTagTable{},
	Run:          runRest("/auth/ctrl/ShowGpuTagTable"),
	StreamOut:    true,
}

var AddGpuTagCmd = &cli.Command{
	Use:          "AddGpuTag",
	RequiredArgs: strings.Join(append([]string{"region"}, GpuTagTableRequiredArgs...), " "),
	OptionalArgs: strings.Join(GpuTagTableOptionalArgs, " "),
	AliasArgs:    strings.Join(GpuTagTableAliasArgs, " "),
	SpecialArgs:  &GpuTagTableSpecialArgs,
	Comments:     addRegionComment(GpuTagTableComments),
	ReqData:      &ormapi.RegionGpuTagTable{},
	ReplyData:    &edgeproto.Result{},
	Run:          runRest("/auth/ctrl/AddGpuTag"),
}

var RemoveGpuTagCmd = &cli.Command{
	Use:          "RemoveGpuTag",
	RequiredArgs: strings.Join(append([]string{"region"}, GpuTagTableRequiredArgs...), " "),
	OptionalArgs: strings.Join(GpuTagTableOptionalArgs, " "),
	AliasArgs:    strings.Join(GpuTagTableAliasArgs, " "),
	SpecialArgs:  &GpuTagTableSpecialArgs,
	Comments:     addRegionComment(GpuTagTableComments),
	ReqData:      &ormapi.RegionGpuTagTable{},
	ReplyData:    &edgeproto.Result{},
	Run:          runRest("/auth/ctrl/RemoveGpuTag"),
}

var GetGpuTagTableCmd = &cli.Command{
	Use:          "GetGpuTagTable",
	RequiredArgs: strings.Join(append([]string{"region"}, GpuTagTableKeyRequiredArgs...), " "),
	OptionalArgs: strings.Join(GpuTagTableKeyOptionalArgs, " "),
	AliasArgs:    strings.Join(GpuTagTableKeyAliasArgs, " "),
	SpecialArgs:  &GpuTagTableKeySpecialArgs,
	Comments:     addRegionComment(GpuTagTableKeyComments),
	ReqData:      &ormapi.RegionGpuTagTableKey{},
	ReplyData:    &edgeproto.GpuTagTable{},
	Run:          runRest("/auth/ctrl/GetGpuTagTable"),
}

var GpuTagTableApiCmds = []*cli.Command{
	CreateGpuTagTableCmd,
	DeleteGpuTagTableCmd,
	UpdateGpuTagTableCmd,
	ShowGpuTagTableCmd,
	AddGpuTagCmd,
	RemoveGpuTagCmd,
	GetGpuTagTableCmd,
}

var GpuTagTableKeyRequiredArgs = []string{}
var GpuTagTableKeyOptionalArgs = []string{
	"name",
}
var GpuTagTableKeyAliasArgs = []string{
	"name=gputagtablekey.name",
}
var GpuTagTableKeyComments = map[string]string{}
var GpuTagTableKeySpecialArgs = map[string]string{}
var GpuTagTableRequiredArgs = []string{
	"name",
}
var GpuTagTableOptionalArgs = []string{
	"tags",
}
var GpuTagTableAliasArgs = []string{
	"name=gputagtable.key.name",
	"tags=gputagtable.tags",
}
var GpuTagTableComments = map[string]string{
	"tags": "one or more string tags  repeated string table = 3;",
}
var GpuTagTableSpecialArgs = map[string]string{
	"tags": "StringArray",
}
