// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: node.proto

package ormctl

import edgeproto "github.com/mobiledgex/edge-cloud/edgeproto"
import "strings"
import "github.com/mobiledgex/edge-cloud-infra/mc/ormapi"
import "github.com/mobiledgex/edge-cloud/cli"
import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/googleapis/google/api"
import _ "github.com/gogo/protobuf/gogoproto"
import _ "github.com/mobiledgex/edge-cloud/protogen"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Auto-generated code: DO NOT EDIT

var ShowNodeCmd = &cli.Command{
	Use:          "ShowNode",
	RequiredArgs: "region",
	OptionalArgs: strings.Join(append(NodeRequiredArgs, NodeOptionalArgs...), " "),
	AliasArgs:    strings.Join(NodeAliasArgs, " "),
	SpecialArgs:  &NodeSpecialArgs,
	Comments:     addRegionComment(NodeComments),
	ReqData:      &ormapi.RegionNode{},
	ReplyData:    &edgeproto.Node{},
	Run:          runRest("/auth/ctrl/ShowNode"),
	StreamOut:    true,
}

var NodeApiCmds = []*cli.Command{
	ShowNodeCmd,
}

var NodeKeyRequiredArgs = []string{}
var NodeKeyOptionalArgs = []string{
	"name",
	"nodetype",
	"cloudletkey.operatorkey.name",
	"cloudletkey.name",
}
var NodeKeyAliasArgs = []string{
	"name=nodekey.name",
	"nodetype=nodekey.nodetype",
	"cloudletkey.operatorkey.name=nodekey.cloudletkey.operatorkey.name",
	"cloudletkey.name=nodekey.cloudletkey.name",
}
var NodeKeyComments = map[string]string{
	"name":                         "Name or hostname of node",
	"nodetype":                     "Node type, one of NodeUnknown, NodeDme, NodeCrm, NodeController",
	"cloudletkey.operatorkey.name": "Company or Organization name of the operator",
	"cloudletkey.name":             "Name of the cloudlet",
}
var NodeKeySpecialArgs = map[string]string{}
var NodeRequiredArgs = []string{
	"key.name",
	"key.nodetype",
	"key.cloudletkey.operatorkey.name",
	"key.cloudletkey.name",
}
var NodeOptionalArgs = []string{
	"notifyid",
	"buildmaster",
	"buildhead",
	"buildauthor",
	"hostname",
	"containerversion",
}
var NodeAliasArgs = []string{
	"key.name=node.key.name",
	"key.nodetype=node.key.nodetype",
	"key.cloudletkey.operatorkey.name=node.key.cloudletkey.operatorkey.name",
	"key.cloudletkey.name=node.key.cloudletkey.name",
	"notifyid=node.notifyid",
	"buildmaster=node.buildmaster",
	"buildhead=node.buildhead",
	"buildauthor=node.buildauthor",
	"hostname=node.hostname",
	"containerversion=node.containerversion",
}
var NodeComments = map[string]string{
	"key.name":                         "Name or hostname of node",
	"key.nodetype":                     "Node type, one of NodeUnknown, NodeDme, NodeCrm, NodeController",
	"key.cloudletkey.operatorkey.name": "Company or Organization name of the operator",
	"key.cloudletkey.name":             "Name of the cloudlet",
	"notifyid":                         "Id of client assigned by server (internal use only)",
	"buildmaster":                      "Build Master Version",
	"buildhead":                        "Build Head Version",
	"buildauthor":                      "Build Author",
	"hostname":                         "Hostname",
	"containerversion":                 "Docker edge-cloud container version which node instance use",
}
var NodeSpecialArgs = map[string]string{}
