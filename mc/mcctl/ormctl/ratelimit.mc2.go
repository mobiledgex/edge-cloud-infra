// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: ratelimit.proto

package ormctl

import (
	fmt "fmt"
	_ "github.com/gogo/googleapis/google/api"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	"github.com/mobiledgex/edge-cloud-infra/mc/ormapi"
	"github.com/mobiledgex/edge-cloud/cli"
	edgeproto "github.com/mobiledgex/edge-cloud/edgeproto"
	_ "github.com/mobiledgex/edge-cloud/protogen"
	math "math"
	"strings"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Auto-generated code: DO NOT EDIT

var UpdateRateLimitSettingsCmd = &ApiCommand{
	Name:          "UpdateRateLimitSettings",
	Use:           "update",
	Short:         "Update RateLimit settings for an API endpoint type",
	RequiredArgs:  "region " + strings.Join(RateLimitSettingsRequiredArgs, " "),
	OptionalArgs:  strings.Join(RateLimitSettingsOptionalArgs, " "),
	AliasArgs:     strings.Join(RateLimitSettingsAliasArgs, " "),
	SpecialArgs:   &RateLimitSettingsSpecialArgs,
	Comments:      addRegionComment(RateLimitSettingsComments),
	ReqData:       &ormapi.RegionRateLimitSettings{},
	ReplyData:     &edgeproto.Result{},
	Path:          "/auth/ctrl/UpdateRateLimitSettings",
	SetFieldsFunc: SetUpdateRateLimitSettingsFields,
	ProtobufApi:   true,
}

func SetUpdateRateLimitSettingsFields(in map[string]interface{}) {
	// get map for edgeproto object in region struct
	obj := in["RateLimitSettings"]
	if obj == nil {
		return
	}
	objmap, ok := obj.(map[string]interface{})
	if !ok {
		return
	}
	fields := cli.GetSpecifiedFields(objmap, &edgeproto.RateLimitSettings{}, cli.JsonNamespace)
	// include fields already specified
	if inFields, found := objmap["fields"]; found {
		if fieldsArr, ok := inFields.([]string); ok {
			fields = append(fields, fieldsArr...)
		}
	}
	objmap["fields"] = fields
}

var DeleteRateLimitSettingsCmd = &ApiCommand{
	Name:         "DeleteRateLimitSettings",
	Use:          "delete",
	Short:        "Delete RateLimit settings for an API endpoint type (ie. no rate limiting)",
	RequiredArgs: "region " + strings.Join(RateLimitSettingsRequiredArgs, " "),
	OptionalArgs: strings.Join(RateLimitSettingsOptionalArgs, " "),
	AliasArgs:    strings.Join(RateLimitSettingsAliasArgs, " "),
	SpecialArgs:  &RateLimitSettingsSpecialArgs,
	Comments:     addRegionComment(RateLimitSettingsComments),
	ReqData:      &ormapi.RegionRateLimitSettings{},
	ReplyData:    &edgeproto.Result{},
	Path:         "/auth/ctrl/DeleteRateLimitSettings",
	ProtobufApi:  true,
}

var ResetRateLimitSettingsCmd = &ApiCommand{
	Name:         "ResetRateLimitSettings",
	Use:          "reset",
	Short:        "Reset RateLimit settings to default for an API endpoint type",
	RequiredArgs: "region " + strings.Join(RateLimitSettingsRequiredArgs, " "),
	OptionalArgs: strings.Join(RateLimitSettingsOptionalArgs, " "),
	AliasArgs:    strings.Join(RateLimitSettingsAliasArgs, " "),
	SpecialArgs:  &RateLimitSettingsSpecialArgs,
	Comments:     addRegionComment(RateLimitSettingsComments),
	ReqData:      &ormapi.RegionRateLimitSettings{},
	ReplyData:    &edgeproto.Result{},
	Path:         "/auth/ctrl/ResetRateLimitSettings",
	ProtobufApi:  true,
}

var ShowRateLimitSettingsCmd = &ApiCommand{
	Name:         "ShowRateLimitSettings",
	Use:          "show",
	Short:        "Show RateLimit settings for an API endpoint type",
	RequiredArgs: "region",
	OptionalArgs: strings.Join(append(RateLimitSettingsRequiredArgs, RateLimitSettingsOptionalArgs...), " "),
	AliasArgs:    strings.Join(RateLimitSettingsAliasArgs, " "),
	SpecialArgs:  &RateLimitSettingsSpecialArgs,
	Comments:     addRegionComment(RateLimitSettingsComments),
	ReqData:      &ormapi.RegionRateLimitSettings{},
	ReplyData:    &edgeproto.RateLimitSettings{},
	Path:         "/auth/ctrl/ShowRateLimitSettings",
	StreamOut:    true,
	ProtobufApi:  true,
}

var RateLimitSettingsApiCmds = []*ApiCommand{
	UpdateRateLimitSettingsCmd,
	DeleteRateLimitSettingsCmd,
	ResetRateLimitSettingsCmd,
	ShowRateLimitSettingsCmd,
}

const RateLimitSettingsGroup = "RateLimitSettings"

func init() {
	AllApis.AddGroup(RateLimitSettingsGroup, "Manage RateLimitSettings", RateLimitSettingsApiCmds)
}

var RateLimitSettingsKeyRequiredArgs = []string{}
var RateLimitSettingsKeyOptionalArgs = []string{
	"apiendpointtype",
	"apiactiontype",
	"ratelimittarget",
}
var RateLimitSettingsKeyAliasArgs = []string{
	"apiendpointtype=ratelimitsettingskey.apiendpointtype",
	"apiactiontype=ratelimitsettingskey.apiactiontype",
	"ratelimittarget=ratelimitsettingskey.ratelimittarget",
}
var RateLimitSettingsKeyComments = map[string]string{
	"apiendpointtype": "API Endpoint type, one of UnknownApiEndpointType, Controller, Dme",
	"apiactiontype":   "API Action type (All DME apis are Default), one of UnknownAction, CreateAction, DeleteAction, UpdateAction, ShowAction, DefaultAction",
	"ratelimittarget": "Target to rate limit, one of UnknownTarget, AllRequests, PerIp, PerUser, PerOrg",
}
var RateLimitSettingsKeySpecialArgs = map[string]string{}
var RateLimitSettingsRequiredArgs = []string{
	"apiendpointtype",
	"apiactiontype",
	"ratelimittarget",
}
var RateLimitSettingsOptionalArgs = []string{
	"flowalgorithm",
	"reqspersecond",
	"burstsize",
	"maxreqsalgorithm",
	"maxrequestspersecond",
	"maxrequestsperminute",
	"maxrequestsperhour",
}
var RateLimitSettingsAliasArgs = []string{
	"fields=ratelimitsettings.fields",
	"apiendpointtype=ratelimitsettings.key.apiendpointtype",
	"apiactiontype=ratelimitsettings.key.apiactiontype",
	"ratelimittarget=ratelimitsettings.key.ratelimittarget",
	"flowalgorithm=ratelimitsettings.flowalgorithm",
	"reqspersecond=ratelimitsettings.reqspersecond",
	"burstsize=ratelimitsettings.burstsize",
	"maxreqsalgorithm=ratelimitsettings.maxreqsalgorithm",
	"maxrequestspersecond=ratelimitsettings.maxrequestspersecond",
	"maxrequestsperminute=ratelimitsettings.maxrequestsperminute",
	"maxrequestsperhour=ratelimitsettings.maxrequestsperhour",
}
var RateLimitSettingsComments = map[string]string{
	"fields":               "Fields are used for the Update API to specify which fields to apply",
	"apiendpointtype":      "API Endpoint type, one of UnknownApiEndpointType, Controller, Dme",
	"apiactiontype":        "API Action type (All DME apis are Default), one of UnknownAction, CreateAction, DeleteAction, UpdateAction, ShowAction, DefaultAction",
	"ratelimittarget":      "Target to rate limit, one of UnknownTarget, AllRequests, PerIp, PerUser, PerOrg",
	"flowalgorithm":        "Flow Rate Limit algorithm - includes NoFlowAlgorithm, TokenBucketAlgorithm, or LeakyBucketAlgorithm, one of UnknownFlowAlgorithm, TokenBucketAlgorithm, LeakyBucketAlgorithm, NoFlowAlgorithm",
	"reqspersecond":        "requests per second for flow rate limiting. If updating, must provide burstSize as well",
	"burstsize":            "burst size for flow rate limiting. If updating, must provide reqsPerSecond as well",
	"maxreqsalgorithm":     "MaxReqs Rate Limit Algorithm - includes NoMaxReqsAlgorithm or FixedWindowAlgorithm, one of UnknownMaxReqsAlgorithm, FixedWindowAlgorithm, RollingWindowAlgorithm, NoMaxReqsAlgorithm",
	"maxrequestspersecond": "maximum number of requests per second for max reqs rate limiting",
	"maxrequestsperminute": "maximum number of requests per minute for max reqs rate limiting",
	"maxrequestsperhour":   "maximum number of requests per hour for max reqs rate limiting",
}
var RateLimitSettingsSpecialArgs = map[string]string{
	"ratelimitsettings.fields": "StringArray",
}
var RateLimitSettingsDataRequiredArgs = []string{}
var RateLimitSettingsDataOptionalArgs = []string{
	"settings:#.fields",
	"settings:#.key.apiendpointtype",
	"settings:#.key.apiactiontype",
	"settings:#.key.ratelimittarget",
	"settings:#.flowalgorithm",
	"settings:#.reqspersecond",
	"settings:#.burstsize",
	"settings:#.maxreqsalgorithm",
	"settings:#.maxrequestspersecond",
	"settings:#.maxrequestsperminute",
	"settings:#.maxrequestsperhour",
}
var RateLimitSettingsDataAliasArgs = []string{
	"settings:#.fields=ratelimitsettingsdata.settings:#.fields",
	"settings:#.key.apiendpointtype=ratelimitsettingsdata.settings:#.key.apiendpointtype",
	"settings:#.key.apiactiontype=ratelimitsettingsdata.settings:#.key.apiactiontype",
	"settings:#.key.ratelimittarget=ratelimitsettingsdata.settings:#.key.ratelimittarget",
	"settings:#.flowalgorithm=ratelimitsettingsdata.settings:#.flowalgorithm",
	"settings:#.reqspersecond=ratelimitsettingsdata.settings:#.reqspersecond",
	"settings:#.burstsize=ratelimitsettingsdata.settings:#.burstsize",
	"settings:#.maxreqsalgorithm=ratelimitsettingsdata.settings:#.maxreqsalgorithm",
	"settings:#.maxrequestspersecond=ratelimitsettingsdata.settings:#.maxrequestspersecond",
	"settings:#.maxrequestsperminute=ratelimitsettingsdata.settings:#.maxrequestsperminute",
	"settings:#.maxrequestsperhour=ratelimitsettingsdata.settings:#.maxrequestsperhour",
}
var RateLimitSettingsDataComments = map[string]string{
	"settings:#.fields":               "Fields are used for the Update API to specify which fields to apply",
	"settings:#.key.apiendpointtype":  "API Endpoint type, one of UnknownApiEndpointType, Controller, Dme",
	"settings:#.key.apiactiontype":    "API Action type (All DME apis are Default), one of UnknownAction, CreateAction, DeleteAction, UpdateAction, ShowAction, DefaultAction",
	"settings:#.key.ratelimittarget":  "Target to rate limit, one of UnknownTarget, AllRequests, PerIp, PerUser, PerOrg",
	"settings:#.flowalgorithm":        "Flow Rate Limit algorithm - includes NoFlowAlgorithm, TokenBucketAlgorithm, or LeakyBucketAlgorithm, one of UnknownFlowAlgorithm, TokenBucketAlgorithm, LeakyBucketAlgorithm, NoFlowAlgorithm",
	"settings:#.reqspersecond":        "requests per second for flow rate limiting. If updating, must provide burstSize as well",
	"settings:#.burstsize":            "burst size for flow rate limiting. If updating, must provide reqsPerSecond as well",
	"settings:#.maxreqsalgorithm":     "MaxReqs Rate Limit Algorithm - includes NoMaxReqsAlgorithm or FixedWindowAlgorithm, one of UnknownMaxReqsAlgorithm, FixedWindowAlgorithm, RollingWindowAlgorithm, NoMaxReqsAlgorithm",
	"settings:#.maxrequestspersecond": "maximum number of requests per second for max reqs rate limiting",
	"settings:#.maxrequestsperminute": "maximum number of requests per minute for max reqs rate limiting",
	"settings:#.maxrequestsperhour":   "maximum number of requests per hour for max reqs rate limiting",
}
var RateLimitSettingsDataSpecialArgs = map[string]string{
	"ratelimitsettingsdata.settings:#.fields": "StringArray",
}
