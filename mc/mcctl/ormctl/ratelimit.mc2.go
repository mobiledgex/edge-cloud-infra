// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: ratelimit.proto

package ormctl

import (
	fmt "fmt"
	_ "github.com/gogo/googleapis/google/api"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	"github.com/mobiledgex/edge-cloud-infra/mc/ormapi"
	"github.com/mobiledgex/edge-cloud/cli"
	edgeproto "github.com/mobiledgex/edge-cloud/edgeproto"
	_ "github.com/mobiledgex/edge-cloud/protogen"
	math "math"
	"strings"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Auto-generated code: DO NOT EDIT

var CreateRateLimitSettingsCmd = &ApiCommand{
	Name:         "CreateRateLimitSettings",
	Use:          "create",
	Short:        "Create RateLimitSettings for an API endpoint and target",
	RequiredArgs: "region " + strings.Join(RateLimitSettingsRequiredArgs, " "),
	OptionalArgs: strings.Join(RateLimitSettingsOptionalArgs, " "),
	AliasArgs:    strings.Join(RateLimitSettingsAliasArgs, " "),
	SpecialArgs:  &RateLimitSettingsSpecialArgs,
	Comments:     addRegionComment(RateLimitSettingsComments),
	ReqData:      &ormapi.RegionRateLimitSettings{},
	ReplyData:    &edgeproto.Result{},
	Path:         "/auth/ctrl/CreateRateLimitSettings",
	ProtobufApi:  true,
}

var UpdateRateLimitSettingsCmd = &ApiCommand{
	Name:          "UpdateRateLimitSettings",
	Use:           "update",
	Short:         "Update RateLimit settings for an API endpoint and target",
	RequiredArgs:  "region " + strings.Join(RateLimitSettingsRequiredArgs, " "),
	OptionalArgs:  strings.Join(RateLimitSettingsOptionalArgs, " "),
	AliasArgs:     strings.Join(RateLimitSettingsAliasArgs, " "),
	SpecialArgs:   &RateLimitSettingsSpecialArgs,
	Comments:      addRegionComment(RateLimitSettingsComments),
	ReqData:       &ormapi.RegionRateLimitSettings{},
	ReplyData:     &edgeproto.Result{},
	Path:          "/auth/ctrl/UpdateRateLimitSettings",
	SetFieldsFunc: SetUpdateRateLimitSettingsFields,
	ProtobufApi:   true,
}

func SetUpdateRateLimitSettingsFields(in map[string]interface{}) {
	// get map for edgeproto object in region struct
	obj := in["RateLimitSettings"]
	if obj == nil {
		return
	}
	objmap, ok := obj.(map[string]interface{})
	if !ok {
		return
	}
	fields := cli.GetSpecifiedFields(objmap, &edgeproto.RateLimitSettings{}, cli.JsonNamespace)
	// include fields already specified
	if inFields, found := objmap["fields"]; found {
		if fieldsArr, ok := inFields.([]string); ok {
			fields = append(fields, fieldsArr...)
		}
	}
	objmap["fields"] = fields
}

var DeleteRateLimitSettingsCmd = &ApiCommand{
	Name:         "DeleteRateLimitSettings",
	Use:          "delete",
	Short:        "Delete RateLimit settings for an API endpoint and target (ie. no rate limiting)",
	RequiredArgs: "region " + strings.Join(RateLimitSettingsRequiredArgs, " "),
	OptionalArgs: strings.Join(RateLimitSettingsOptionalArgs, " "),
	AliasArgs:    strings.Join(RateLimitSettingsAliasArgs, " "),
	SpecialArgs:  &RateLimitSettingsSpecialArgs,
	Comments:     addRegionComment(RateLimitSettingsComments),
	ReqData:      &ormapi.RegionRateLimitSettings{},
	ReplyData:    &edgeproto.Result{},
	Path:         "/auth/ctrl/DeleteRateLimitSettings",
	ProtobufApi:  true,
}

var ShowRateLimitSettingsCmd = &ApiCommand{
	Name:         "ShowRateLimitSettings",
	Use:          "show",
	Short:        "Show RateLimit settings for an API endpoint and target",
	RequiredArgs: "region",
	OptionalArgs: strings.Join(append(RateLimitSettingsRequiredArgs, RateLimitSettingsOptionalArgs...), " "),
	AliasArgs:    strings.Join(RateLimitSettingsAliasArgs, " "),
	SpecialArgs:  &RateLimitSettingsSpecialArgs,
	Comments:     addRegionComment(RateLimitSettingsComments),
	ReqData:      &ormapi.RegionRateLimitSettings{},
	ReplyData:    &edgeproto.RateLimitSettings{},
	Path:         "/auth/ctrl/ShowRateLimitSettings",
	StreamOut:    true,
	ProtobufApi:  true,
}

var RateLimitSettingsApiCmds = []*ApiCommand{
	CreateRateLimitSettingsCmd,
	UpdateRateLimitSettingsCmd,
	DeleteRateLimitSettingsCmd,
	ShowRateLimitSettingsCmd,
}

const RateLimitSettingsGroup = "RateLimitSettings"

func init() {
	AllApis.AddGroup(RateLimitSettingsGroup, "Manage RateLimitSettings", RateLimitSettingsApiCmds)
}

var RateLimitSettingsRequiredArgs = []string{
	"apiname",
	"apiendpointtype",
	"ratelimittarget",
}
var RateLimitSettingsOptionalArgs = []string{
	"flowsettings:#.flowalgorithm",
	"flowsettings:#.reqspersecond",
	"flowsettings:#.burstsize",
	"maxreqssettings:#.maxreqsalgorithm",
	"maxreqssettings:#.maxrequests",
	"maxreqssettings:#.interval",
}
var RateLimitSettingsAliasArgs = []string{
	"fields=ratelimitsettings.fields",
	"apiname=ratelimitsettings.key.apiname",
	"apiendpointtype=ratelimitsettings.key.apiendpointtype",
	"ratelimittarget=ratelimitsettings.key.ratelimittarget",
	"flowsettings:#.flowalgorithm=ratelimitsettings.flowsettings:#.flowalgorithm",
	"flowsettings:#.reqspersecond=ratelimitsettings.flowsettings:#.reqspersecond",
	"flowsettings:#.burstsize=ratelimitsettings.flowsettings:#.burstsize",
	"maxreqssettings:#.maxreqsalgorithm=ratelimitsettings.maxreqssettings:#.maxreqsalgorithm",
	"maxreqssettings:#.maxrequests=ratelimitsettings.maxreqssettings:#.maxrequests",
	"maxreqssettings:#.interval=ratelimitsettings.maxreqssettings:#.interval",
}
var RateLimitSettingsComments = map[string]string{
	"fields":                             "Fields are used for the Update API to specify which fields to apply",
	"apiname":                            "Name of API (eg. CreateApp or RegisterClient) (Use Global if not a specific API)",
	"apiendpointtype":                    "API Endpoint type, one of UnknownApiEndpointType, Dme",
	"ratelimittarget":                    "Target to rate limit, one of UnknownTarget, AllRequests, PerIp, PerUser",
	"flowsettings:#.flowalgorithm":       "Flow Rate Limit algorithm, one of UnknownFlowAlgorithm, TokenBucketAlgorithm, LeakyBucketAlgorithm",
	"flowsettings:#.reqspersecond":       "requests per second for flow rate limiting",
	"flowsettings:#.burstsize":           "burst size for flow rate limiting",
	"maxreqssettings:#.maxreqsalgorithm": "MaxReqs Rate Limit Algorithm, one of UnknownMaxReqsAlgorithm, FixedWindowAlgorithm",
	"maxreqssettings:#.maxrequests":      "Maximum number of requests for the given Interval",
	"maxreqssettings:#.interval":         "Time interval",
}
var RateLimitSettingsSpecialArgs = map[string]string{
	"ratelimitsettings.fields": "StringArray",
}
