// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: restagtable.proto

package ormctl

import (
	fmt "fmt"
	_ "github.com/gogo/googleapis/google/api"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	"github.com/mobiledgex/edge-cloud-infra/mc/ormapi"
	"github.com/mobiledgex/edge-cloud/cli"
	edgeproto "github.com/mobiledgex/edge-cloud/edgeproto"
	_ "github.com/mobiledgex/edge-cloud/protogen"
	math "math"
	"strings"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Auto-generated code: DO NOT EDIT

var CreateResTagTableCmd = &ApiCommand{
	Name:         "CreateResTagTable",
	Use:          "create",
	Short:        "Create TagTable",
	RequiredArgs: "region " + strings.Join(ResTagTableRequiredArgs, " "),
	OptionalArgs: strings.Join(ResTagTableOptionalArgs, " "),
	AliasArgs:    strings.Join(ResTagTableAliasArgs, " "),
	SpecialArgs:  &ResTagTableSpecialArgs,
	Comments:     addRegionComment(ResTagTableComments),
	ReqData:      &ormapi.RegionResTagTable{},
	ReplyData:    &edgeproto.Result{},
	Path:         "/auth/ctrl/CreateResTagTable",
	ProtobufApi:  true,
}

var DeleteResTagTableCmd = &ApiCommand{
	Name:         "DeleteResTagTable",
	Use:          "delete",
	Short:        "Delete TagTable",
	RequiredArgs: "region " + strings.Join(ResTagTableRequiredArgs, " "),
	OptionalArgs: strings.Join(ResTagTableOptionalArgs, " "),
	AliasArgs:    strings.Join(ResTagTableAliasArgs, " "),
	SpecialArgs:  &ResTagTableSpecialArgs,
	Comments:     addRegionComment(ResTagTableComments),
	ReqData:      &ormapi.RegionResTagTable{},
	ReplyData:    &edgeproto.Result{},
	Path:         "/auth/ctrl/DeleteResTagTable",
	ProtobufApi:  true,
}

var UpdateResTagTableCmd = &ApiCommand{
	Name:          "UpdateResTagTable",
	Use:           "update",
	Short:         "Update TagTable",
	RequiredArgs:  "region " + strings.Join(ResTagTableRequiredArgs, " "),
	OptionalArgs:  strings.Join(ResTagTableOptionalArgs, " "),
	AliasArgs:     strings.Join(ResTagTableAliasArgs, " "),
	SpecialArgs:   &ResTagTableSpecialArgs,
	Comments:      addRegionComment(ResTagTableComments),
	ReqData:       &ormapi.RegionResTagTable{},
	ReplyData:     &edgeproto.Result{},
	Path:          "/auth/ctrl/UpdateResTagTable",
	SetFieldsFunc: SetUpdateResTagTableFields,
	ProtobufApi:   true,
}

func SetUpdateResTagTableFields(in map[string]interface{}) {
	// get map for edgeproto object in region struct
	obj := in[strings.ToLower("ResTagTable")]
	if obj == nil {
		return
	}
	objmap, ok := obj.(map[string]interface{})
	if !ok {
		return
	}
	fields := cli.GetSpecifiedFields(objmap, &edgeproto.ResTagTable{}, cli.JsonNamespace)
	// include fields already specified
	if inFields, found := objmap["fields"]; found {
		if fieldsArr, ok := inFields.([]string); ok {
			fields = append(fields, fieldsArr...)
		}
	}
	objmap["fields"] = fields
}

var ShowResTagTableCmd = &ApiCommand{
	Name:         "ShowResTagTable",
	Use:          "show",
	Short:        "Show TagTable",
	RequiredArgs: "region",
	OptionalArgs: strings.Join(append(ResTagTableRequiredArgs, ResTagTableOptionalArgs...), " "),
	AliasArgs:    strings.Join(ResTagTableAliasArgs, " "),
	SpecialArgs:  &ResTagTableSpecialArgs,
	Comments:     addRegionComment(ResTagTableComments),
	ReqData:      &ormapi.RegionResTagTable{},
	ReplyData:    &edgeproto.ResTagTable{},
	Path:         "/auth/ctrl/ShowResTagTable",
	StreamOut:    true,
	ProtobufApi:  true,
}

var AddResTagCmd = &ApiCommand{
	Name:         "AddResTag",
	Use:          "addrestag",
	Short:        "Add new tag(s) to TagTable",
	RequiredArgs: "region " + strings.Join(ResTagTableRequiredArgs, " "),
	OptionalArgs: strings.Join(ResTagTableOptionalArgs, " "),
	AliasArgs:    strings.Join(ResTagTableAliasArgs, " "),
	SpecialArgs:  &ResTagTableSpecialArgs,
	Comments:     addRegionComment(ResTagTableComments),
	ReqData:      &ormapi.RegionResTagTable{},
	ReplyData:    &edgeproto.Result{},
	Path:         "/auth/ctrl/AddResTag",
	ProtobufApi:  true,
}

var RemoveResTagCmd = &ApiCommand{
	Name:         "RemoveResTag",
	Use:          "removerestag",
	Short:        "Remove existing tag(s) from TagTable",
	RequiredArgs: "region " + strings.Join(ResTagTableRequiredArgs, " "),
	OptionalArgs: strings.Join(ResTagTableOptionalArgs, " "),
	AliasArgs:    strings.Join(ResTagTableAliasArgs, " "),
	SpecialArgs:  &ResTagTableSpecialArgs,
	Comments:     addRegionComment(ResTagTableComments),
	ReqData:      &ormapi.RegionResTagTable{},
	ReplyData:    &edgeproto.Result{},
	Path:         "/auth/ctrl/RemoveResTag",
	ProtobufApi:  true,
}

var GetResTagTableCmd = &ApiCommand{
	Name:         "GetResTagTable",
	Use:          "get",
	Short:        "Fetch a copy of the TagTable",
	RequiredArgs: "region " + strings.Join(ResTagTableKeyRequiredArgs, " "),
	OptionalArgs: strings.Join(ResTagTableKeyOptionalArgs, " "),
	AliasArgs:    strings.Join(ResTagTableKeyAliasArgs, " "),
	SpecialArgs:  &ResTagTableKeySpecialArgs,
	Comments:     addRegionComment(ResTagTableKeyComments),
	ReqData:      &ormapi.RegionResTagTableKey{},
	ReplyData:    &edgeproto.ResTagTable{},
	Path:         "/auth/ctrl/GetResTagTable",
	ProtobufApi:  true,
}

var ResTagTableApiCmds = []*ApiCommand{
	CreateResTagTableCmd,
	DeleteResTagTableCmd,
	UpdateResTagTableCmd,
	ShowResTagTableCmd,
	AddResTagCmd,
	RemoveResTagCmd,
	GetResTagTableCmd,
}

const ResTagTableGroup = "ResTagTable"

func init() {
	AllApis.AddGroup(ResTagTableGroup, "Manage ResTagTables", ResTagTableApiCmds)
}

var ResTagTableKeyRequiredArgs = []string{}
var ResTagTableKeyOptionalArgs = []string{
	"name",
	"organization",
}
var ResTagTableKeyAliasArgs = []string{
	"name=restagtablekey.name",
	"organization=restagtablekey.organization",
}
var ResTagTableKeyComments = map[string]string{
	"name":         "Resource Table Name",
	"organization": "Operator organization of the cloudlet site.",
}
var ResTagTableKeySpecialArgs = map[string]string{}
var ResTagTableRequiredArgs = []string{
	"res",
	"organization",
	"tags",
}
var ResTagTableOptionalArgs = []string{
	"azone",
}
var ResTagTableAliasArgs = []string{
	"fields=restagtable.fields",
	"res=restagtable.key.name",
	"organization=restagtable.key.organization",
	"tags=restagtable.tags",
	"azone=restagtable.azone",
}
var ResTagTableComments = map[string]string{
	"res":          "Resource Table Name",
	"organization": "Operator organization of the cloudlet site.",
	"tags":         "one or more string tags",
	"azone":        "availability zone(s) of resource if required",
}
var ResTagTableSpecialArgs = map[string]string{
	"restagtable.fields": "StringArray",
	"restagtable.tags":   "StringToString",
}
