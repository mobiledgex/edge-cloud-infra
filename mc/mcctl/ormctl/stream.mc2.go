// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: stream.proto

package ormctl

import (
	fmt "fmt"
	_ "github.com/gogo/googleapis/google/api"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	"github.com/mobiledgex/edge-cloud-infra/mc/ormapi"
	"github.com/mobiledgex/edge-cloud/cli"
	edgeproto "github.com/mobiledgex/edge-cloud/edgeproto"
	_ "github.com/mobiledgex/edge-cloud/protogen"
	math "math"
	"strings"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Auto-generated code: DO NOT EDIT

var StreamAppInstCmd = &cli.Command{
	Use:                  "StreamAppInst",
	RequiredArgs:         "region " + strings.Join(AppInstKeyRequiredArgs, " "),
	OptionalArgs:         strings.Join(AppInstKeyOptionalArgs, " "),
	AliasArgs:            strings.Join(AppInstKeyAliasArgs, " "),
	SpecialArgs:          &AppInstKeySpecialArgs,
	Comments:             addRegionComment(AppInstKeyComments),
	ReqData:              &ormapi.RegionAppInstKey{},
	ReplyData:            &edgeproto.StreamMsg{},
	Run:                  runRest("/auth/ctrl/StreamAppInst"),
	StreamOut:            true,
	StreamOutIncremental: true,
}

var StreamClusterInstCmd = &cli.Command{
	Use:                  "StreamClusterInst",
	RequiredArgs:         "region " + strings.Join(ClusterInstKeyRequiredArgs, " "),
	OptionalArgs:         strings.Join(ClusterInstKeyOptionalArgs, " "),
	AliasArgs:            strings.Join(ClusterInstKeyAliasArgs, " "),
	SpecialArgs:          &ClusterInstKeySpecialArgs,
	Comments:             addRegionComment(ClusterInstKeyComments),
	ReqData:              &ormapi.RegionClusterInstKey{},
	ReplyData:            &edgeproto.StreamMsg{},
	Run:                  runRest("/auth/ctrl/StreamClusterInst"),
	StreamOut:            true,
	StreamOutIncremental: true,
}

var StreamCloudletCmd = &cli.Command{
	Use:                  "StreamCloudlet",
	RequiredArgs:         "region " + strings.Join(CloudletKeyRequiredArgs, " "),
	OptionalArgs:         strings.Join(CloudletKeyOptionalArgs, " "),
	AliasArgs:            strings.Join(CloudletKeyAliasArgs, " "),
	SpecialArgs:          &CloudletKeySpecialArgs,
	Comments:             addRegionComment(CloudletKeyComments),
	ReqData:              &ormapi.RegionCloudletKey{},
	ReplyData:            &edgeproto.StreamMsg{},
	Run:                  runRest("/auth/ctrl/StreamCloudlet"),
	StreamOut:            true,
	StreamOutIncremental: true,
}

var StreamObjApiCmds = []*cli.Command{
	StreamAppInstCmd,
	StreamClusterInstCmd,
	StreamCloudletCmd,
}

var StreamMsgRequiredArgs = []string{}
var StreamMsgOptionalArgs = []string{
	"id",
	"msg",
}
var StreamMsgAliasArgs = []string{
	"id=streammsg.id",
	"msg=streammsg.msg",
}
var StreamMsgComments = map[string]string{
	"id":  "Unique message ID",
	"msg": "Stream message",
}
var StreamMsgSpecialArgs = map[string]string{}
var StreamObjRequiredArgs = []string{
	"key.appkey.organization",
	"key.appkey.name",
	"key.appkey.version",
	"key.clusterinstkey.clusterkey.name",
	"key.clusterinstkey.cloudletkey.organization",
	"key.clusterinstkey.cloudletkey.name",
	"key.clusterinstkey.organization",
}
var StreamObjOptionalArgs = []string{
	"state",
}
var StreamObjAliasArgs = []string{
	"key.appkey.organization=streamobj.key.appkey.organization",
	"key.appkey.name=streamobj.key.appkey.name",
	"key.appkey.version=streamobj.key.appkey.version",
	"key.clusterinstkey.clusterkey.name=streamobj.key.clusterinstkey.clusterkey.name",
	"key.clusterinstkey.cloudletkey.organization=streamobj.key.clusterinstkey.cloudletkey.organization",
	"key.clusterinstkey.cloudletkey.name=streamobj.key.clusterinstkey.cloudletkey.name",
	"key.clusterinstkey.organization=streamobj.key.clusterinstkey.organization",
	"msgs:#.id=streamobj.msgs:#.id",
	"msgs:#.msg=streamobj.msgs:#.msg",
	"state=streamobj.state",
	"lastid=streamobj.lastid",
	"lease=streamobj.lease",
	"errormsg=streamobj.errormsg",
}
var StreamObjComments = map[string]string{
	"key.appkey.organization":                     "App developer organization",
	"key.appkey.name":                             "App name",
	"key.appkey.version":                          "App version",
	"key.clusterinstkey.clusterkey.name":          "Cluster name",
	"key.clusterinstkey.cloudletkey.organization": "Organization of the cloudlet site",
	"key.clusterinstkey.cloudletkey.name":         "Name of the cloudlet",
	"key.clusterinstkey.organization":             "Name of Developer organization that this cluster belongs to",
	"msgs:#.id":                                   "Unique message ID",
	"msgs:#.msg":                                  "Stream message",
	"state":                                       "Current state of the obj on the Cloudlet, one of StreamUnknown, StreamStart, StreamStop, StreamError",
	"lastid":                                      "Last ID to track duplicate messages",
	"lease":                                       "Lease time",
	"errormsg":                                    "Stream error message, if any",
}
var StreamObjSpecialArgs = map[string]string{}
