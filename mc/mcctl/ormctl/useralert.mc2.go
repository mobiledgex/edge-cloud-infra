// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: useralert.proto

package ormctl

import (
	fmt "fmt"
	_ "github.com/gogo/googleapis/google/api"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	"github.com/mobiledgex/edge-cloud-infra/mc/ormapi"
	"github.com/mobiledgex/edge-cloud/cli"
	edgeproto "github.com/mobiledgex/edge-cloud/edgeproto"
	_ "github.com/mobiledgex/edge-cloud/protogen"
	math "math"
	"strings"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Auto-generated code: DO NOT EDIT

var CreateUserAlertCmd = &ApiCommand{
	Name:         "CreateUserAlert",
	Use:          "create",
	Short:        "Create a User Defined Alert",
	RequiredArgs: "region " + strings.Join(CreateUserAlertRequiredArgs, " "),
	OptionalArgs: strings.Join(CreateUserAlertOptionalArgs, " "),
	AliasArgs:    strings.Join(UserAlertAliasArgs, " "),
	SpecialArgs:  &UserAlertSpecialArgs,
	Comments:     addRegionComment(UserAlertComments),
	ReqData:      &ormapi.RegionUserAlert{},
	ReplyData:    &edgeproto.Result{},
	Path:         "/auth/ctrl/CreateUserAlert",
	ProtobufApi:  true,
}

var DeleteUserAlertCmd = &ApiCommand{
	Name:         "DeleteUserAlert",
	Use:          "delete",
	Short:        "Delete a User Defined Alert",
	RequiredArgs: "region " + strings.Join(UserAlertRequiredArgs, " "),
	OptionalArgs: strings.Join(UserAlertOptionalArgs, " "),
	AliasArgs:    strings.Join(UserAlertAliasArgs, " "),
	SpecialArgs:  &UserAlertSpecialArgs,
	Comments:     addRegionComment(UserAlertComments),
	ReqData:      &ormapi.RegionUserAlert{},
	ReplyData:    &edgeproto.Result{},
	Path:         "/auth/ctrl/DeleteUserAlert",
	ProtobufApi:  true,
}

var UpdateUserAlertCmd = &ApiCommand{
	Name:          "UpdateUserAlert",
	Use:           "update",
	Short:         "Update a User Defined Alert",
	RequiredArgs:  "region " + strings.Join(UserAlertRequiredArgs, " "),
	OptionalArgs:  strings.Join(UserAlertOptionalArgs, " "),
	AliasArgs:     strings.Join(UserAlertAliasArgs, " "),
	SpecialArgs:   &UserAlertSpecialArgs,
	Comments:      addRegionComment(UserAlertComments),
	ReqData:       &ormapi.RegionUserAlert{},
	ReplyData:     &edgeproto.Result{},
	Path:          "/auth/ctrl/UpdateUserAlert",
	SetFieldsFunc: SetUpdateUserAlertFields,
	ProtobufApi:   true,
}

func SetUpdateUserAlertFields(in map[string]interface{}) {
	// get map for edgeproto object in region struct
	obj := in["UserAlert"]
	if obj == nil {
		return
	}
	objmap, ok := obj.(map[string]interface{})
	if !ok {
		return
	}
	fields := cli.GetSpecifiedFields(objmap, &edgeproto.UserAlert{}, cli.JsonNamespace)
	// include fields already specified
	if inFields, found := objmap["fields"]; found {
		if fieldsArr, ok := inFields.([]string); ok {
			fields = append(fields, fieldsArr...)
		}
	}
	objmap["fields"] = fields
}

var ShowUserAlertCmd = &ApiCommand{
	Name:         "ShowUserAlert",
	Use:          "show",
	Short:        "Show User Defined Alerts. Any fields specified will be used to filter results.",
	RequiredArgs: "region",
	OptionalArgs: strings.Join(append(UserAlertRequiredArgs, UserAlertOptionalArgs...), " "),
	AliasArgs:    strings.Join(UserAlertAliasArgs, " "),
	SpecialArgs:  &UserAlertSpecialArgs,
	Comments:     addRegionComment(UserAlertComments),
	ReqData:      &ormapi.RegionUserAlert{},
	ReplyData:    &edgeproto.UserAlert{},
	Path:         "/auth/ctrl/ShowUserAlert",
	StreamOut:    true,
	ProtobufApi:  true,
}

var UserAlertApiCmds = []*ApiCommand{
	CreateUserAlertCmd,
	DeleteUserAlertCmd,
	UpdateUserAlertCmd,
	ShowUserAlertCmd,
}

const UserAlertGroup = "UserAlert"

func init() {
	AllApis.AddGroup(UserAlertGroup, "Manage UserAlerts", UserAlertApiCmds)
}

var CreateUserAlertRequiredArgs = []string{
	"alert-org",
	"name",
	"severity",
}
var CreateUserAlertOptionalArgs = []string{
	"cpu-utilization",
	"mem-usage",
	"disk-usage",
	"active-connections",
	"trigger-time",
	"labels",
	"annotations",
}
var UserAlertRequiredArgs = []string{
	"alert-org",
	"name",
}
var UserAlertOptionalArgs = []string{
	"cpu-utilization",
	"mem-usage",
	"disk-usage",
	"active-connections",
	"severity",
	"trigger-time",
	"labels",
	"annotations",
}
var UserAlertAliasArgs = []string{
	"fields=useralert.fields",
	"alert-org=useralert.key.organization",
	"name=useralert.key.name",
	"cpu-utilization=useralert.cpulimit",
	"mem-usage=useralert.memlimit",
	"disk-usage=useralert.disklimit",
	"active-connections=useralert.activeconnlimit",
	"severity=useralert.severity",
	"trigger-time=useralert.triggertime",
	"labels=useralert.labels",
	"annotations=useralert.annotations",
}
var UserAlertComments = map[string]string{
	"alert-org":          "Name of the organization for the app that this alert can be applied to",
	"name":               "Alert name",
	"cpu-utilization":    "CPU",
	"mem-usage":          "Mem",
	"disk-usage":         "Disk",
	"active-connections": "Active Connections",
	"severity":           "Alert Severity",
	"trigger-time":       "Trigger threshold interval",
	"labels":             "Additional Labels",
	"annotations":        "Additional Annotations for extra information about the alert",
}
var UserAlertSpecialArgs = map[string]string{
	"useralert.annotations": "StringToString",
	"useralert.fields":      "StringArray",
	"useralert.labels":      "StringToString",
}
