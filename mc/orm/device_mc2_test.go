// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: device.proto

package orm

import edgeproto "github.com/mobiledgex/edge-cloud/edgeproto"
import "net/http"
import "testing"
import "github.com/stretchr/testify/require"
import "github.com/mobiledgex/edge-cloud-infra/mc/ormclient"
import "github.com/mobiledgex/edge-cloud-infra/mc/orm/testutil"
import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/googleapis/google/api"
import _ "github.com/mobiledgex/edge-cloud/protogen"
import _ "github.com/gogo/protobuf/gogoproto"
import _ "github.com/gogo/protobuf/types"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Auto-generated code: DO NOT EDIT

var _ = edgeproto.GetFields

func badPermInjectDevice(t *testing.T, mcClient *ormclient.Client, uri, token, region, org string) {
	_, status, err := testutil.TestPermInjectDevice(mcClient, uri, token, region, org)
	require.NotNil(t, err)
	require.Equal(t, http.StatusForbidden, status)
}

func goodPermInjectDevice(t *testing.T, mcClient *ormclient.Client, uri, token, region, org string) {
	_, status, err := testutil.TestPermInjectDevice(mcClient, uri, token, region, org)
	require.Nil(t, err)
	require.Equal(t, http.StatusOK, status)
}

var _ = edgeproto.GetFields

func badPermShowDevice(t *testing.T, mcClient *ormclient.Client, uri, token, region, org string) {
	_, status, err := testutil.TestPermShowDevice(mcClient, uri, token, region, org)
	require.NotNil(t, err)
	require.Equal(t, http.StatusForbidden, status)
}

func goodPermShowDevice(t *testing.T, mcClient *ormclient.Client, uri, token, region, org string) {
	_, status, err := testutil.TestPermShowDevice(mcClient, uri, token, region, org)
	require.Nil(t, err)
	require.Equal(t, http.StatusOK, status)
}

var _ = edgeproto.GetFields

func badPermEvictDevice(t *testing.T, mcClient *ormclient.Client, uri, token, region, org string) {
	_, status, err := testutil.TestPermEvictDevice(mcClient, uri, token, region, org)
	require.NotNil(t, err)
	require.Equal(t, http.StatusForbidden, status)
}

func goodPermEvictDevice(t *testing.T, mcClient *ormclient.Client, uri, token, region, org string) {
	_, status, err := testutil.TestPermEvictDevice(mcClient, uri, token, region, org)
	require.Nil(t, err)
	require.Equal(t, http.StatusOK, status)
}

var _ = edgeproto.GetFields

func badPermShowDeviceReport(t *testing.T, mcClient *ormclient.Client, uri, token, region, org string) {
	_, status, err := testutil.TestPermShowDeviceReport(mcClient, uri, token, region, org)
	require.NotNil(t, err)
	require.Equal(t, http.StatusForbidden, status)
}

func goodPermShowDeviceReport(t *testing.T, mcClient *ormclient.Client, uri, token, region, org string) {
	_, status, err := testutil.TestPermShowDeviceReport(mcClient, uri, token, region, org)
	require.Nil(t, err)
	require.Equal(t, http.StatusOK, status)
}
