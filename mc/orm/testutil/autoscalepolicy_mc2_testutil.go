// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: autoscalepolicy.proto

package testutil

import edgeproto "github.com/mobiledgex/edge-cloud/edgeproto"
import "context"
import "github.com/mobiledgex/edge-cloud-infra/mc/ormclient"
import "github.com/mobiledgex/edge-cloud-infra/mc/ormapi"
import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/googleapis/google/api"
import _ "github.com/mobiledgex/edge-cloud/protogen"
import _ "github.com/gogo/protobuf/gogoproto"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Auto-generated code: DO NOT EDIT

func TestCreateAutoScalePolicy(mcClient *ormclient.Client, uri, token, region string, in *edgeproto.AutoScalePolicy, modFuncs ...func(*edgeproto.AutoScalePolicy)) (*edgeproto.Result, int, error) {
	dat := &ormapi.RegionAutoScalePolicy{}
	dat.Region = region
	dat.AutoScalePolicy = *in
	for _, fn := range modFuncs {
		fn(&dat.AutoScalePolicy)
	}
	return mcClient.CreateAutoScalePolicy(uri, token, dat)
}
func TestPermCreateAutoScalePolicy(mcClient *ormclient.Client, uri, token, region, org string, modFuncs ...func(*edgeproto.AutoScalePolicy)) (*edgeproto.Result, int, error) {
	in := &edgeproto.AutoScalePolicy{}
	in.Key.Organization = org
	return TestCreateAutoScalePolicy(mcClient, uri, token, region, in, modFuncs...)
}

func TestDeleteAutoScalePolicy(mcClient *ormclient.Client, uri, token, region string, in *edgeproto.AutoScalePolicy, modFuncs ...func(*edgeproto.AutoScalePolicy)) (*edgeproto.Result, int, error) {
	dat := &ormapi.RegionAutoScalePolicy{}
	dat.Region = region
	dat.AutoScalePolicy = *in
	for _, fn := range modFuncs {
		fn(&dat.AutoScalePolicy)
	}
	return mcClient.DeleteAutoScalePolicy(uri, token, dat)
}
func TestPermDeleteAutoScalePolicy(mcClient *ormclient.Client, uri, token, region, org string, modFuncs ...func(*edgeproto.AutoScalePolicy)) (*edgeproto.Result, int, error) {
	in := &edgeproto.AutoScalePolicy{}
	in.Key.Organization = org
	return TestDeleteAutoScalePolicy(mcClient, uri, token, region, in, modFuncs...)
}

func TestUpdateAutoScalePolicy(mcClient *ormclient.Client, uri, token, region string, in *edgeproto.AutoScalePolicy, modFuncs ...func(*edgeproto.AutoScalePolicy)) (*edgeproto.Result, int, error) {
	dat := &ormapi.RegionAutoScalePolicy{}
	dat.Region = region
	dat.AutoScalePolicy = *in
	for _, fn := range modFuncs {
		fn(&dat.AutoScalePolicy)
	}
	return mcClient.UpdateAutoScalePolicy(uri, token, dat)
}
func TestPermUpdateAutoScalePolicy(mcClient *ormclient.Client, uri, token, region, org string, modFuncs ...func(*edgeproto.AutoScalePolicy)) (*edgeproto.Result, int, error) {
	in := &edgeproto.AutoScalePolicy{}
	in.Key.Organization = org
	return TestUpdateAutoScalePolicy(mcClient, uri, token, region, in, modFuncs...)
}

func TestShowAutoScalePolicy(mcClient *ormclient.Client, uri, token, region string, in *edgeproto.AutoScalePolicy, modFuncs ...func(*edgeproto.AutoScalePolicy)) ([]edgeproto.AutoScalePolicy, int, error) {
	dat := &ormapi.RegionAutoScalePolicy{}
	dat.Region = region
	dat.AutoScalePolicy = *in
	for _, fn := range modFuncs {
		fn(&dat.AutoScalePolicy)
	}
	return mcClient.ShowAutoScalePolicy(uri, token, dat)
}
func TestPermShowAutoScalePolicy(mcClient *ormclient.Client, uri, token, region, org string, modFuncs ...func(*edgeproto.AutoScalePolicy)) ([]edgeproto.AutoScalePolicy, int, error) {
	in := &edgeproto.AutoScalePolicy{}
	in.Key.Organization = org
	return TestShowAutoScalePolicy(mcClient, uri, token, region, in, modFuncs...)
}

func (s *TestClient) CreateAutoScalePolicy(ctx context.Context, in *edgeproto.AutoScalePolicy) (*edgeproto.Result, error) {
	inR := &ormapi.RegionAutoScalePolicy{
		Region:          s.Region,
		AutoScalePolicy: *in,
	}
	out, status, err := s.McClient.CreateAutoScalePolicy(s.Uri, s.Token, inR)
	if err == nil && status != 200 {
		err = fmt.Errorf("status: %d\n", status)
	}
	return out, err
}

func (s *TestClient) DeleteAutoScalePolicy(ctx context.Context, in *edgeproto.AutoScalePolicy) (*edgeproto.Result, error) {
	inR := &ormapi.RegionAutoScalePolicy{
		Region:          s.Region,
		AutoScalePolicy: *in,
	}
	out, status, err := s.McClient.DeleteAutoScalePolicy(s.Uri, s.Token, inR)
	if err == nil && status != 200 {
		err = fmt.Errorf("status: %d\n", status)
	}
	return out, err
}

func (s *TestClient) UpdateAutoScalePolicy(ctx context.Context, in *edgeproto.AutoScalePolicy) (*edgeproto.Result, error) {
	inR := &ormapi.RegionAutoScalePolicy{
		Region:          s.Region,
		AutoScalePolicy: *in,
	}
	out, status, err := s.McClient.UpdateAutoScalePolicy(s.Uri, s.Token, inR)
	if err == nil && status != 200 {
		err = fmt.Errorf("status: %d\n", status)
	}
	return out, err
}

func (s *TestClient) ShowAutoScalePolicy(ctx context.Context, in *edgeproto.AutoScalePolicy) ([]edgeproto.AutoScalePolicy, error) {
	inR := &ormapi.RegionAutoScalePolicy{
		Region:          s.Region,
		AutoScalePolicy: *in,
	}
	out, status, err := s.McClient.ShowAutoScalePolicy(s.Uri, s.Token, inR)
	if err == nil && status != 200 {
		err = fmt.Errorf("status: %d\n", status)
	}
	return out, err
}
