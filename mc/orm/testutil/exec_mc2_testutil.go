// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: exec.proto

package testutil

import edgeproto "github.com/mobiledgex/edge-cloud/edgeproto"
import "github.com/mobiledgex/edge-cloud-infra/mc/ormclient"
import "github.com/mobiledgex/edge-cloud-infra/mc/ormapi"
import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/mobiledgex/edge-cloud/protogen"
import _ "github.com/gogo/protobuf/gogoproto"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Auto-generated code: DO NOT EDIT

func TestRunCommand(mcClient *ormclient.Client, uri, token, region string, in *edgeproto.ExecRequest) (*edgeproto.ExecRequest, int, error) {
	dat := &ormapi.RegionExecRequest{}
	dat.Region = region
	dat.ExecRequest = *in
	return mcClient.RunCommand(uri, token, dat)
}
func TestPermRunCommand(mcClient *ormclient.Client, uri, token, region, org string) (*edgeproto.ExecRequest, int, error) {
	in := &edgeproto.ExecRequest{}
	in.AppInstKey.AppKey.DeveloperKey.Name = org
	return TestRunCommand(mcClient, uri, token, region, in)
}

func TestRunConsole(mcClient *ormclient.Client, uri, token, region string, in *edgeproto.ExecRequest) (*edgeproto.ExecRequest, int, error) {
	dat := &ormapi.RegionExecRequest{}
	dat.Region = region
	dat.ExecRequest = *in
	return mcClient.RunConsole(uri, token, dat)
}
func TestPermRunConsole(mcClient *ormclient.Client, uri, token, region, org string) (*edgeproto.ExecRequest, int, error) {
	in := &edgeproto.ExecRequest{}
	in.AppInstKey.AppKey.DeveloperKey.Name = org
	return TestRunConsole(mcClient, uri, token, region, in)
}

func TestShowLogs(mcClient *ormclient.Client, uri, token, region string, in *edgeproto.ExecRequest) (*edgeproto.ExecRequest, int, error) {
	dat := &ormapi.RegionExecRequest{}
	dat.Region = region
	dat.ExecRequest = *in
	return mcClient.ShowLogs(uri, token, dat)
}
func TestPermShowLogs(mcClient *ormclient.Client, uri, token, region, org string) (*edgeproto.ExecRequest, int, error) {
	in := &edgeproto.ExecRequest{}
	in.AppInstKey.AppKey.DeveloperKey.Name = org
	return TestShowLogs(mcClient, uri, token, region, in)
}

func RunMcExecApi_ExecRequest(mcClient ormclient.Api, uri, token, region string, data *[]edgeproto.ExecRequest, dataMap interface{}, rc *bool, mode string) {
	for _, execRequest := range *data {
		in := &ormapi.RegionExecRequest{
			Region:      region,
			ExecRequest: execRequest,
		}
		switch mode {
		case "runcommand":
			_, st, err := mcClient.RunCommand(uri, token, in)
			checkMcErr("RunCommand", st, err, rc)
		case "runconsole":
			_, st, err := mcClient.RunConsole(uri, token, in)
			checkMcErr("RunConsole", st, err, rc)
		case "showlogs":
			_, st, err := mcClient.ShowLogs(uri, token, in)
			checkMcErr("ShowLogs", st, err, rc)
		default:
			return
		}
	}
}
