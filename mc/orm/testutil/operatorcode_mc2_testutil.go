// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: operatorcode.proto

package testutil

import (
	"context"
	fmt "fmt"
	_ "github.com/gogo/googleapis/google/api"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	"github.com/mobiledgex/edge-cloud-infra/mc/ormapi"
	"github.com/mobiledgex/edge-cloud-infra/mc/ormclient"
	edgeproto "github.com/mobiledgex/edge-cloud/edgeproto"
	_ "github.com/mobiledgex/edge-cloud/protogen"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Auto-generated code: DO NOT EDIT

func TestCreateOperatorCode(mcClient *ormclient.Client, uri, token, region string, in *edgeproto.OperatorCode, modFuncs ...func(*edgeproto.OperatorCode)) (*edgeproto.Result, int, error) {
	dat := &ormapi.RegionOperatorCode{}
	dat.Region = region
	dat.OperatorCode = *in
	for _, fn := range modFuncs {
		fn(&dat.OperatorCode)
	}
	return mcClient.CreateOperatorCode(uri, token, dat)
}
func TestPermCreateOperatorCode(mcClient *ormclient.Client, uri, token, region, org string, modFuncs ...func(*edgeproto.OperatorCode)) (*edgeproto.Result, int, error) {
	in := &edgeproto.OperatorCode{}
	in.Organization = org
	return TestCreateOperatorCode(mcClient, uri, token, region, in, modFuncs...)
}

func TestDeleteOperatorCode(mcClient *ormclient.Client, uri, token, region string, in *edgeproto.OperatorCode, modFuncs ...func(*edgeproto.OperatorCode)) (*edgeproto.Result, int, error) {
	dat := &ormapi.RegionOperatorCode{}
	dat.Region = region
	dat.OperatorCode = *in
	for _, fn := range modFuncs {
		fn(&dat.OperatorCode)
	}
	return mcClient.DeleteOperatorCode(uri, token, dat)
}
func TestPermDeleteOperatorCode(mcClient *ormclient.Client, uri, token, region, org string, modFuncs ...func(*edgeproto.OperatorCode)) (*edgeproto.Result, int, error) {
	in := &edgeproto.OperatorCode{}
	in.Organization = org
	return TestDeleteOperatorCode(mcClient, uri, token, region, in, modFuncs...)
}

func TestShowOperatorCode(mcClient *ormclient.Client, uri, token, region string, in *edgeproto.OperatorCode, modFuncs ...func(*edgeproto.OperatorCode)) ([]edgeproto.OperatorCode, int, error) {
	dat := &ormapi.RegionOperatorCode{}
	dat.Region = region
	dat.OperatorCode = *in
	for _, fn := range modFuncs {
		fn(&dat.OperatorCode)
	}
	return mcClient.ShowOperatorCode(uri, token, dat)
}
func TestPermShowOperatorCode(mcClient *ormclient.Client, uri, token, region, org string, modFuncs ...func(*edgeproto.OperatorCode)) ([]edgeproto.OperatorCode, int, error) {
	in := &edgeproto.OperatorCode{}
	in.Organization = org
	return TestShowOperatorCode(mcClient, uri, token, region, in, modFuncs...)
}

func (s *TestClient) CreateOperatorCode(ctx context.Context, in *edgeproto.OperatorCode) (*edgeproto.Result, error) {
	inR := &ormapi.RegionOperatorCode{
		Region:       s.Region,
		OperatorCode: *in,
	}
	out, status, err := s.McClient.CreateOperatorCode(s.Uri, s.Token, inR)
	if err == nil && status != 200 {
		err = fmt.Errorf("status: %d\n", status)
	}
	return out, err
}

func (s *TestClient) DeleteOperatorCode(ctx context.Context, in *edgeproto.OperatorCode) (*edgeproto.Result, error) {
	inR := &ormapi.RegionOperatorCode{
		Region:       s.Region,
		OperatorCode: *in,
	}
	out, status, err := s.McClient.DeleteOperatorCode(s.Uri, s.Token, inR)
	if err == nil && status != 200 {
		err = fmt.Errorf("status: %d\n", status)
	}
	return out, err
}

func (s *TestClient) ShowOperatorCode(ctx context.Context, in *edgeproto.OperatorCode) ([]edgeproto.OperatorCode, error) {
	inR := &ormapi.RegionOperatorCode{
		Region:       s.Region,
		OperatorCode: *in,
	}
	out, status, err := s.McClient.ShowOperatorCode(s.Uri, s.Token, inR)
	if err == nil && status != 200 {
		err = fmt.Errorf("status: %d\n", status)
	}
	return out, err
}
