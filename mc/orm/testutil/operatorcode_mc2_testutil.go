// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: operatorcode.proto

package testutil

import edgeproto "github.com/mobiledgex/edge-cloud/edgeproto"
import "github.com/mobiledgex/edge-cloud-infra/mc/ormclient"
import "github.com/mobiledgex/edge-cloud-infra/mc/ormapi"
import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/googleapis/google/api"
import _ "github.com/mobiledgex/edge-cloud/protogen"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Auto-generated code: DO NOT EDIT

func TestCreateOperatorCode(mcClient *ormclient.Client, uri, token, region string, in *edgeproto.OperatorCode) (*edgeproto.Result, int, error) {
	dat := &ormapi.RegionOperatorCode{}
	dat.Region = region
	dat.OperatorCode = *in
	return mcClient.CreateOperatorCode(uri, token, dat)
}
func TestPermCreateOperatorCode(mcClient *ormclient.Client, uri, token, region, org string) (*edgeproto.Result, int, error) {
	in := &edgeproto.OperatorCode{}
	return TestCreateOperatorCode(mcClient, uri, token, region, in)
}

func TestDeleteOperatorCode(mcClient *ormclient.Client, uri, token, region string, in *edgeproto.OperatorCode) (*edgeproto.Result, int, error) {
	dat := &ormapi.RegionOperatorCode{}
	dat.Region = region
	dat.OperatorCode = *in
	return mcClient.DeleteOperatorCode(uri, token, dat)
}
func TestPermDeleteOperatorCode(mcClient *ormclient.Client, uri, token, region, org string) (*edgeproto.Result, int, error) {
	in := &edgeproto.OperatorCode{}
	return TestDeleteOperatorCode(mcClient, uri, token, region, in)
}

func TestShowOperatorCode(mcClient *ormclient.Client, uri, token, region string, in *edgeproto.OperatorCode) ([]edgeproto.OperatorCode, int, error) {
	dat := &ormapi.RegionOperatorCode{}
	dat.Region = region
	dat.OperatorCode = *in
	return mcClient.ShowOperatorCode(uri, token, dat)
}
func TestPermShowOperatorCode(mcClient *ormclient.Client, uri, token, region, org string) ([]edgeproto.OperatorCode, int, error) {
	in := &edgeproto.OperatorCode{}
	return TestShowOperatorCode(mcClient, uri, token, region, in)
}

func RunMcOperatorCodeApi(mcClient ormclient.Api, uri, token, region string, data *[]edgeproto.OperatorCode, dataMap interface{}, rc *bool, mode string) {
	for _, operatorCode := range *data {
		in := &ormapi.RegionOperatorCode{
			Region:       region,
			OperatorCode: operatorCode,
		}
		switch mode {
		case "create":
			_, st, err := mcClient.CreateOperatorCode(uri, token, in)
			checkMcErr("CreateOperatorCode", st, err, rc)
		case "delete":
			_, st, err := mcClient.DeleteOperatorCode(uri, token, in)
			checkMcErr("DeleteOperatorCode", st, err, rc)
		default:
			return
		}
	}
}
