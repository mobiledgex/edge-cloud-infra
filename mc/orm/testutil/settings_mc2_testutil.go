// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: settings.proto

package testutil

import edgeproto "github.com/mobiledgex/edge-cloud/edgeproto"
import "os"
import "github.com/mobiledgex/edge-cloud-infra/mc/ormclient"
import "github.com/mobiledgex/edge-cloud-infra/mc/ormapi"
import "github.com/mobiledgex/edge-cloud/cli"
import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/googleapis/google/api"
import _ "github.com/mobiledgex/edge-cloud/protogen"
import _ "github.com/gogo/protobuf/gogoproto"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Auto-generated code: DO NOT EDIT

func TestUpdateSettings(mcClient *ormclient.Client, uri, token, region string, in *edgeproto.Settings) (*edgeproto.Result, int, error) {
	dat := &ormapi.RegionSettings{}
	dat.Region = region
	dat.Settings = *in
	return mcClient.UpdateSettings(uri, token, dat)
}
func TestPermUpdateSettings(mcClient *ormclient.Client, uri, token, region, org string) (*edgeproto.Result, int, error) {
	in := &edgeproto.Settings{}
	return TestUpdateSettings(mcClient, uri, token, region, in)
}

func TestResetSettings(mcClient *ormclient.Client, uri, token, region string, in *edgeproto.Settings) (*edgeproto.Result, int, error) {
	dat := &ormapi.RegionSettings{}
	dat.Region = region
	dat.Settings = *in
	return mcClient.ResetSettings(uri, token, dat)
}
func TestPermResetSettings(mcClient *ormclient.Client, uri, token, region, org string) (*edgeproto.Result, int, error) {
	in := &edgeproto.Settings{}
	return TestResetSettings(mcClient, uri, token, region, in)
}

func TestShowSettings(mcClient *ormclient.Client, uri, token, region string, in *edgeproto.Settings) (*edgeproto.Settings, int, error) {
	dat := &ormapi.RegionSettings{}
	dat.Region = region
	dat.Settings = *in
	return mcClient.ShowSettings(uri, token, dat)
}
func TestPermShowSettings(mcClient *ormclient.Client, uri, token, region, org string) (*edgeproto.Settings, int, error) {
	in := &edgeproto.Settings{}
	return TestShowSettings(mcClient, uri, token, region, in)
}

func RunMcSettingsApi(mcClient ormclient.Api, uri, token, region string, obj *edgeproto.Settings, dataMap interface{}, rc *bool, mode string) {
	if obj == nil {
		return
	}
	in := &ormapi.RegionSettings{
		Region:   region,
		Settings: *obj,
	}
	switch mode {
	case "update":
		objMap, err := cli.GetGenericObj(dataMap)
		if err != nil {
			fmt.Fprintf(os.Stderr, "bad dataMap for Settings: %v", err)
			os.Exit(1)
		}
		in.Settings.Fields = cli.GetSpecifiedFields(objMap, &in.Settings, cli.YamlNamespace)
		_, st, err := mcClient.UpdateSettings(uri, token, in)
		checkMcErr("UpdateSettings", st, err, rc)
	case "reset":
		_, st, err := mcClient.ResetSettings(uri, token, in)
		checkMcErr("ResetSettings", st, err, rc)
	default:
		return
	}
}
